{"version":3,"file":"static/js/2268.b77cb38c.chunk.js","mappings":"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","sources":["components/StatisticsWidget1.tsx","components/StatisticsWidget2.tsx","components/StatisticsWidget3.tsx","../node_modules/react-bootstrap/esm/Badge.js","../node_modules/react-bootstrap/esm/ElementChildren.js","../node_modules/react-bootstrap/esm/ProgressBar.js"],"sourcesContent":["import { Card, Dropdown } from 'react-bootstrap';\nimport Chart from 'react-apexcharts';\nimport { ApexOptions } from 'apexcharts';\n\ntype StatisticsWidget1Props = {\n    title: string;\n    data: number;\n    color: string;\n    stats: number;\n    subTitle: string;\n};\n\nconst StatisticsWidget1 = ({ title, data, color, stats, subTitle }: StatisticsWidget1Props) => {\n    const apexOpts: ApexOptions = {\n        chart: {\n            type: 'radialBar',\n            sparkline: {\n                enabled: true,\n            },\n        },\n        dataLabels: {\n            enabled: false,\n        },\n        plotOptions: {\n            radialBar: {\n                hollow: {\n                    margin: 0,\n                    size: '75%',\n                },\n                track: {\n                    background: color,\n                    opacity: 0.3,\n                    margin: 0,\n                },\n                dataLabels: {\n                    name: {\n                        show: false,\n                    },\n                    value: {\n                        show: true,\n                        color: color,\n                        fontWeight: 700,\n                        fontSize: '14px',\n                        offsetY: 5,\n                        formatter: (val: number) => {\n                            return String(val);\n                        },\n                    },\n                },\n            },\n        },\n        states: {\n            hover: {\n                filter: {\n                    type: 'none',\n                },\n            },\n        },\n        colors: [color],\n    };\n\n    const apexData = [data];\n\n    return (\n        <Card>\n            <Card.Body>\n                <Dropdown className=\"float-end\" align=\"end\">\n                    <Dropdown.Toggle as=\"a\" className=\"cursor-pointer card-drop\">\n                        <i className=\"mdi mdi-dots-vertical\"></i>\n                    </Dropdown.Toggle>\n                    <Dropdown.Menu>\n                        <Dropdown.Item>Action</Dropdown.Item>\n                        <Dropdown.Item>Anothther Action</Dropdown.Item>\n                        <Dropdown.Item>Something Else</Dropdown.Item>\n                        <Dropdown.Item>Separated link</Dropdown.Item>\n                    </Dropdown.Menu>\n                </Dropdown>\n                <h4 className=\"header-title mt-0 mb-4\">{title}</h4>\n                <div className=\"widget-chart-1\">\n                    <div className=\"widget-chart-box-1 float-start\">\n                        <Chart\n                            options={apexOpts}\n                            series={apexData}\n                            type=\"radialBar\"\n                            width={77}\n                            height={77}\n                            className=\"apex-charts mt-0\"\n                        />\n                    </div>\n                    <div className=\"widget-detail-1 text-end\">\n                        <h2 className=\"fw-normal pt-2 mb-1\">{stats}</h2>\n                        <p className=\"text-muted mb-1\">{subTitle}</p>\n                    </div>\n                </div>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default StatisticsWidget1;\n","import classNames from 'classnames';\nimport { Badge, Card, Dropdown, ProgressBar } from 'react-bootstrap';\n\ntype StatisticsWidgetProps = {\n    variant: string;\n    title: string;\n    trendValue: string;\n    trendIcon: string;\n    stats: number;\n    subTitle: string;\n    progress: number;\n};\n\nconst StatisticsWidget2 = ({\n    variant,\n    title,\n    trendValue,\n    trendIcon,\n    stats,\n    subTitle,\n    progress,\n}: StatisticsWidgetProps) => {\n    return (\n        <Card>\n            <Card.Body>\n                <Dropdown className=\"float-end\" align=\"end\">\n                    <Dropdown.Toggle as=\"a\" className=\"cursor-pointer card-drop\">\n                        <i className=\"mdi mdi-dots-vertical\"></i>\n                    </Dropdown.Toggle>\n                    <Dropdown.Menu>\n                        <Dropdown.Item>Action</Dropdown.Item>\n                        <Dropdown.Item>Anothther Action</Dropdown.Item>\n                        <Dropdown.Item>Something Else</Dropdown.Item>\n                        <Dropdown.Item>Separated link</Dropdown.Item>\n                    </Dropdown.Menu>\n                </Dropdown>\n                <h4 className=\"header-title mt-0 mb-3\">{title}</h4>\n                <div className=\"widget-box-2\">\n                    <div className=\"widget-detail-2 text-end\">\n                        <Badge bg={variant} pill className=\"float-start mt-3\">\n                            {trendValue} <i className={trendIcon}></i>\n                        </Badge>\n                        <h2 className=\"fw-normal mb-1\">{stats}</h2>\n                        <p className=\"text-muted mb-3\">{subTitle}</p>\n                    </div>\n                    <ProgressBar\n                        variant={variant}\n                        now={progress}\n                        className={classNames('progress-sm', 'progress-bar-alt-' + variant)}\n                    ></ProgressBar>\n                </div>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default StatisticsWidget2;\n","import classNames from 'classnames';\nimport { Card } from 'react-bootstrap';\n\ntype StatisticsWidget3Props = {\n    variant: string;\n    avatar: string;\n    name: string;\n    emailId: string;\n    position: string;\n};\n\nconst StatisticsWidget3 = ({ variant, avatar, name, emailId, position }: StatisticsWidget3Props) => {\n    return (\n        <Card>\n            <Card.Body className=\"widget-user\">\n                <div className=\"d-flex align-items-center\">\n                    <div className=\"flex-shrink-0 avatar-lg me-3\">\n                        <img src={avatar} className=\"img-fluid rounded-circle\" alt=\"user\" />\n                    </div>\n                    <div className=\"flex-grow-1 overflow-hidden\">\n                        <h5 className=\"mt-0 mb-1\">{name}</h5>\n                        <p className=\"text-muted mb-2 font-13 text-truncate\">{emailId}</p>\n                        <small className={classNames('text-' + variant)}>\n                            <b>{position}</b>\n                        </small>\n                    </div>\n                </div>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default StatisticsWidget3;\n","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Badge = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  bg = 'primary',\n  pill = false,\n  text,\n  className,\n  as: Component = 'span',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'badge');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, pill && `rounded-pill`, text && `text-${text}`, bg && `bg-${bg}`)\n  });\n});\nBadge.displayName = 'Badge';\nexport default Badge;","import * as React from 'react';\n\n/**\n * Iterates through children that are typically specified as `props.children`,\n * but only maps over children that are \"valid elements\".\n *\n * The mapFunction provided index will be normalised to the components mapped,\n * so an invalid component would not increase the index.\n *\n */\nfunction map(children, func) {\n  let index = 0;\n  return React.Children.map(children, child => /*#__PURE__*/React.isValidElement(child) ? func(child, index++) : child);\n}\n\n/**\n * Iterates through children that are \"valid elements\".\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child with the index reflecting the position relative to \"valid components\".\n */\nfunction forEach(children, func) {\n  let index = 0;\n  React.Children.forEach(children, child => {\n    if ( /*#__PURE__*/React.isValidElement(child)) func(child, index++);\n  });\n}\n\n/**\n * Finds whether a component's `children` prop includes a React element of the\n * specified type.\n */\nfunction hasChildOfType(children, type) {\n  return React.Children.toArray(children).some(child => /*#__PURE__*/React.isValidElement(child) && child.type === type);\n}\nexport { map, forEach, hasChildOfType };","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { cloneElement } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { map } from './ElementChildren';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ROUND_PRECISION = 1000;\n\n/**\n * Validate that children, if any, are instances of `ProgressBar`.\n */\nfunction onlyProgressBar(props, propName, componentName) {\n  const children = props[propName];\n  if (!children) {\n    return null;\n  }\n  let error = null;\n  React.Children.forEach(children, child => {\n    if (error) {\n      return;\n    }\n\n    /**\n     * Compare types in a way that works with libraries that patch and proxy\n     * components like react-hot-loader.\n     *\n     * see https://github.com/gaearon/react-hot-loader#checking-element-types\n     */\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    const element = /*#__PURE__*/_jsx(ProgressBar, {});\n    if (child.type === element.type) return;\n    const childType = child.type;\n    const childIdentifier = /*#__PURE__*/React.isValidElement(child) ? childType.displayName || childType.name || childType : child;\n    error = new Error(`Children of ${componentName} can contain only ProgressBar ` + `components. Found ${childIdentifier}.`);\n  });\n  return error;\n}\nfunction getPercentage(now, min, max) {\n  const percentage = (now - min) / (max - min) * 100;\n  return Math.round(percentage * ROUND_PRECISION) / ROUND_PRECISION;\n}\nfunction renderProgressBar({\n  min,\n  now,\n  max,\n  label,\n  visuallyHidden,\n  striped,\n  animated,\n  className,\n  style,\n  variant,\n  bsPrefix,\n  ...props\n}, ref) {\n  return /*#__PURE__*/_jsx(\"div\", {\n    ref: ref,\n    ...props,\n    role: \"progressbar\",\n    className: classNames(className, `${bsPrefix}-bar`, {\n      [`bg-${variant}`]: variant,\n      [`${bsPrefix}-bar-animated`]: animated,\n      [`${bsPrefix}-bar-striped`]: animated || striped\n    }),\n    style: {\n      width: `${getPercentage(now, min, max)}%`,\n      ...style\n    },\n    \"aria-valuenow\": now,\n    \"aria-valuemin\": min,\n    \"aria-valuemax\": max,\n    children: visuallyHidden ? /*#__PURE__*/_jsx(\"span\", {\n      className: \"visually-hidden\",\n      children: label\n    }) : label\n  });\n}\nconst ProgressBar = /*#__PURE__*/React.forwardRef(({\n  isChild = false,\n  ...rest\n}, ref) => {\n  const props = {\n    min: 0,\n    max: 100,\n    animated: false,\n    visuallyHidden: false,\n    striped: false,\n    ...rest\n  };\n  props.bsPrefix = useBootstrapPrefix(props.bsPrefix, 'progress');\n  if (isChild) {\n    return renderProgressBar(props, ref);\n  }\n  const {\n    min,\n    now,\n    max,\n    label,\n    visuallyHidden,\n    striped,\n    animated,\n    bsPrefix,\n    variant,\n    className,\n    children,\n    ...wrapperProps\n  } = props;\n  return /*#__PURE__*/_jsx(\"div\", {\n    ref: ref,\n    ...wrapperProps,\n    className: classNames(className, bsPrefix),\n    children: children ? map(children, child => /*#__PURE__*/cloneElement(child, {\n      isChild: true\n    })) : renderProgressBar({\n      min,\n      now,\n      max,\n      label,\n      visuallyHidden,\n      striped,\n      animated,\n      bsPrefix,\n      variant\n    }, ref)\n  });\n});\nProgressBar.displayName = 'ProgressBar';\nexport default ProgressBar;"],"names":["_ref","title","data","color","stats","subTitle","apexOpts","chart","type","sparkline","enabled","dataLabels","plotOptions","radialBar","hollow","margin","size","track","background","opacity","name","show","value","fontWeight","fontSize","offsetY","formatter","val","String","states","hover","filter","colors","apexData","_jsx","Card","children","_jsxs","Body","Dropdown","className","align","Toggle","as","Menu","Item","Chart","options","series","width","height","variant","trendValue","trendIcon","progress","Badge","bg","pill","ProgressBar","now","classNames","avatar","emailId","position","src","alt","React","ref","bsPrefix","text","Component","props","prefix","useBootstrapPrefix","displayName","map","func","index","child","forEach","hasChildOfType","toArray","some","getPercentage","min","max","percentage","Math","round","renderProgressBar","label","visuallyHidden","striped","animated","style","role","_ref2","isChild","rest","wrapperProps","cloneElement"],"sourceRoot":""}