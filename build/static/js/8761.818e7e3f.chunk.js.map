{"version":3,"file":"static/js/8761.818e7e3f.chunk.js","mappings":"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","sources":["../node_modules/react-bootstrap/esm/usePlaceholder.js","../node_modules/react-bootstrap/esm/PlaceholderButton.js","../node_modules/react-bootstrap/esm/Placeholder.js","pages/uikit/Placeholders/BasicPlaceholders.tsx","pages/uikit/Placeholders/PlaceholdersAnimation.tsx","pages/uikit/Placeholders/PlaceholdersConcept.tsx","pages/uikit/Placeholders/PlaceholdersWidth.tsx","pages/uikit/Placeholders/PlaceholdersWithSizes.tsx","pages/uikit/Placeholders/PlaceholdersWithVariants.tsx","pages/uikit/Placeholders/index.tsx","../node_modules/react-bootstrap/esm/Button.js","../node_modules/react-bootstrap/esm/CardBody.js","../node_modules/react-bootstrap/esm/CardFooter.js","../node_modules/react-bootstrap/esm/CardHeader.js","../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/CardImgOverlay.js","../node_modules/react-bootstrap/esm/CardLink.js","../node_modules/react-bootstrap/esm/CardSubtitle.js","../node_modules/react-bootstrap/esm/CardText.js","../node_modules/react-bootstrap/esm/CardTitle.js","../node_modules/react-bootstrap/esm/Card.js","../node_modules/react-bootstrap/esm/CardHeaderContext.js","../node_modules/react-bootstrap/esm/divWithClassName.js"],"sourcesContent":["\"use client\";\n\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { useCol } from './Col';\nexport default function usePlaceholder({\n  animation,\n  bg,\n  bsPrefix,\n  size,\n  ...props\n}) {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'placeholder');\n  const [{\n    className,\n    ...colProps\n  }] = useCol(props);\n  return {\n    ...colProps,\n    className: classNames(className, animation ? `${bsPrefix}-${animation}` : bsPrefix, size && `${bsPrefix}-${size}`, bg && `bg-${bg}`)\n  };\n}","import * as React from 'react';\nimport Button from './Button';\nimport usePlaceholder from './usePlaceholder';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst PlaceholderButton = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const placeholderProps = usePlaceholder(props);\n  return /*#__PURE__*/_jsx(Button, {\n    ...placeholderProps,\n    ref: ref,\n    disabled: true,\n    tabIndex: -1\n  });\n});\nPlaceholderButton.displayName = 'PlaceholderButton';\nexport default PlaceholderButton;","import * as React from 'react';\nimport usePlaceholder from './usePlaceholder';\nimport PlaceholderButton from './PlaceholderButton';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Placeholder = /*#__PURE__*/React.forwardRef(({\n  as: Component = 'span',\n  ...props\n}, ref) => {\n  const placeholderProps = usePlaceholder(props);\n  return /*#__PURE__*/_jsx(Component, {\n    ...placeholderProps,\n    ref: ref\n  });\n});\nPlaceholder.displayName = 'Placeholder';\nexport default Object.assign(Placeholder, {\n  Button: PlaceholderButton\n});","import { Button, Card, Col, Placeholder, Row } from 'react-bootstrap';\n\n// images\nimport img1 from '../../../assets/images/small/img-1.jpg';\nimport img2 from '../../../assets/images/small/img-3.jpg';\n\nconst BasicPlaceholders = () => {\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">Placeholders</h4>\n                <p className=\"text-muted\">\n                    In the example below, we take a typical card component and recreate it with placeholders applied to\n                    create a “loading card”. Size and proportions are the same between the two.\n                </p>\n\n                <Row>\n                    <Col md={6}>\n                        <Card className=\"border shadow-none\">\n                            <Card.Img variant=\"top\" src={img1} />\n                            <Card.Body>\n                                <Card.Title>Card Title</Card.Title>\n                                <Card.Text>\n                                    Some quick example text to build on the card title and make up the bulk of the\n                                    card's content.\n                                </Card.Text>\n                                <Button>Go somewhere</Button>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                    <Col md={6}>\n                        <Card className=\"border shadow-none mb-0\">\n                            <Card.Img variant=\"top\" src={img2} />\n                            <Card.Body>\n                                <Placeholder as={Card.Title} animation=\"glow\">\n                                    <Placeholder xs={6} />\n                                </Placeholder>\n                                <Placeholder as={Card.Text} animation=\"glow\">\n                                    <Placeholder xs={7} /> <Placeholder xs={4} /> <Placeholder xs={4} />{' '}\n                                    <Placeholder xs={6} /> <Placeholder xs={8} />\n                                </Placeholder>\n                                <Placeholder.Button variant=\"primary\" xs={6} />\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                </Row>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default BasicPlaceholders;\n","import { Card, Placeholder } from 'react-bootstrap';\n\nconst PlaceholdersAnimation = () => {\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">Animation</h4>\n                <p className=\"text-muted\">\n                    Animate placeholders by setting the prop <code>animation</code> to <code>glow</code> or{' '}\n                    <code>wave</code> to better convey the perception of something being <em>actively</em> loaded.\n                </p>\n\n                <Placeholder as=\"p\" animation=\"glow\">\n                    <Placeholder xs={12} />\n                </Placeholder>\n                <Placeholder as=\"p\" animation=\"wave\" className=\"mb-0\">\n                    <Placeholder xs={12} />\n                </Placeholder>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default PlaceholdersAnimation;\n","import { Card, Placeholder } from 'react-bootstrap';\n\nconst PlaceholdersConcept = () => {\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">How it works</h4>\n                <p className=\"text-muted\">\n                    Create placeholders with the <code>Placeholder</code> component and a grid column prop (e.g.,{' '}\n                    <code>xs={6}</code>) to set the <code>width</code>. They can replace the text inside an element or\n                    be added to an existing component via the <code>as</code> prop.\n                </p>\n\n                <p aria-hidden=\"true\">\n                    <Placeholder xs={6} />\n                </p>\n\n                <Placeholder.Button xs={4} aria-hidden=\"true\" />\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default PlaceholdersConcept;\n","import { Card, Placeholder } from 'react-bootstrap';\n\nconst PlaceholdersWidth = () => {\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">Width</h4>\n                <p className=\"text-muted\">\n                    You can change the <code>width</code> through grid column classes, width utilities, or inline\n                    styles.\n                </p>\n                <Placeholder xs={6} />\n                <Placeholder className=\"w-75\" /> <br />\n                <Placeholder style={{ width: '25%' }} />\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default PlaceholdersWidth;\n","import { Card, Placeholder } from 'react-bootstrap';\n\nconst PlaceholdersWithSizes = () => {\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">Sizing</h4>\n                <p className=\"text-muted\">\n                    The size of <code>placeholder</code>s are based on the typographic style of the parent element.\n                    Customize them with sizing props: <code>lg</code>, <code>sm</code>, or <code>xs</code>.\n                </p>\n\n                <Placeholder xs={12} size=\"lg\" />\n                <Placeholder xs={12} />\n                <Placeholder xs={12} size=\"sm\" />\n                <Placeholder xs={12} size=\"xs\" />\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default PlaceholdersWithSizes;\n","import { Card, Placeholder } from 'react-bootstrap';\n\nconst PlaceholdersWithVariants = () => {\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">Color</h4>\n                <p className=\"text-muted\">\n                    By default, the <code>placeholder</code> uses <code>currentColor</code>. This can be overriden with\n                    a custom color or utility class.\n                </p>\n\n                <Placeholder xs={12} />\n\n                <Placeholder xs={12} bg=\"primary\" />\n                <Placeholder xs={12} bg=\"secondary\" />\n                <Placeholder xs={12} bg=\"success\" />\n                <Placeholder xs={12} bg=\"danger\" />\n                <Placeholder xs={12} bg=\"warning\" />\n                <Placeholder xs={12} bg=\"info\" />\n                <Placeholder xs={12} bg=\"light\" />\n                <Placeholder xs={12} bg=\"dark\" />\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default PlaceholdersWithVariants;\n","import { Col, Row } from 'react-bootstrap';\n\n// hooks\nimport { usePageTitle } from '../../../hooks';\n\n// component\nimport BasicPlaceholders from './BasicPlaceholders';\nimport PlaceholdersAnimation from './PlaceholdersAnimation';\nimport PlaceholdersConcept from './PlaceholdersConcept';\nimport PlaceholdersWidth from './PlaceholdersWidth';\nimport PlaceholdersWithSizes from './PlaceholdersWithSizes';\nimport PlaceholdersWithVariants from './PlaceholdersWithVariants';\n\nconst Placeholders = () => {\n    // set pagetitle\n    usePageTitle({\n        title: 'Placeholders',\n        breadCrumbItems: [\n            {\n                path: '/base-ui/placeholders',\n                label: 'Base UI',\n            },\n            {\n                path: '/base-ui/placeholders',\n                label: 'Placeholders',\n                active: true,\n            },\n        ],\n    });\n\n    return (\n        <Row>\n            <Col xl={6}>\n                <BasicPlaceholders />\n                <PlaceholdersWidth />\n                <PlaceholdersAnimation />\n            </Col>\n            <Col xl={6}>\n                <PlaceholdersWithVariants />\n                <PlaceholdersConcept />\n                <PlaceholdersWithSizes />\n            </Col>\n        </Row>\n    );\n};\n\nexport default Placeholders;\n","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useButtonProps } from '@restart/ui/Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Button = /*#__PURE__*/React.forwardRef(({\n  as,\n  bsPrefix,\n  variant = 'primary',\n  size,\n  active = false,\n  disabled = false,\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'btn');\n  const [buttonProps, {\n    tagName\n  }] = useButtonProps({\n    tagName: as,\n    disabled,\n    ...props\n  });\n  const Component = tagName;\n  return /*#__PURE__*/_jsx(Component, {\n    ...buttonProps,\n    ...props,\n    ref: ref,\n    disabled: disabled,\n    className: classNames(className, prefix, active && 'active', variant && `${prefix}-${variant}`, size && `${prefix}-${size}`, props.href && disabled && 'disabled')\n  });\n});\nButton.displayName = 'Button';\nexport default Button;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardBody = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-body');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardBody.displayName = 'CardBody';\nexport default CardBody;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardFooter = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-footer');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardFooter.displayName = 'CardFooter';\nexport default CardFooter;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardHeaderContext from './CardHeaderContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-header');\n  const contextValue = useMemo(() => ({\n    cardHeaderBsPrefix: prefix\n  }), [prefix]);\n  return /*#__PURE__*/_jsx(CardHeaderContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, prefix)\n    })\n  });\n});\nCardHeader.displayName = 'CardHeader';\nexport default CardHeader;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImg = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  variant,\n  as: Component = 'img',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(variant ? `${prefix}-${variant}` : prefix, className),\n    ...props\n  });\n});\nCardImg.displayName = 'CardImg';\nexport default CardImg;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImgOverlay = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-img-overlay');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardImgOverlay.displayName = 'CardImgOverlay';\nexport default CardImgOverlay;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardLink = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'a',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-link');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardLink.displayName = 'CardLink';\nexport default CardLink;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport divWithClassName from './divWithClassName';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH6 = divWithClassName('h6');\nconst CardSubtitle = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = DivStyledAsH6,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-subtitle');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardSubtitle.displayName = 'CardSubtitle';\nexport default CardSubtitle;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardText = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'p',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-text');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardText.displayName = 'CardText';\nexport default CardText;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport divWithClassName from './divWithClassName';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst CardTitle = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = DivStyledAsH5,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-title');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardTitle.displayName = 'CardTitle';\nexport default CardTitle;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardBody from './CardBody';\nimport CardFooter from './CardFooter';\nimport CardHeader from './CardHeader';\nimport CardImg from './CardImg';\nimport CardImgOverlay from './CardImgOverlay';\nimport CardLink from './CardLink';\nimport CardSubtitle from './CardSubtitle';\nimport CardText from './CardText';\nimport CardTitle from './CardTitle';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Card = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  bg,\n  text,\n  border,\n  body = false,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, bg && `bg-${bg}`, text && `text-${text}`, border && `border-${border}`),\n    children: body ? /*#__PURE__*/_jsx(CardBody, {\n      children: children\n    }) : children\n  });\n});\nCard.displayName = 'Card';\nexport default Object.assign(Card, {\n  Img: CardImg,\n  Title: CardTitle,\n  Subtitle: CardSubtitle,\n  Body: CardBody,\n  Link: CardLink,\n  Text: CardText,\n  Header: CardHeader,\n  Footer: CardFooter,\n  ImgOverlay: CardImgOverlay\n});","\"use client\";\n\nimport * as React from 'react';\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'CardHeaderContext';\nexport default context;","import * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default (className => /*#__PURE__*/React.forwardRef((p, ref) => /*#__PURE__*/_jsx(\"div\", {\n  ...p,\n  ref: ref,\n  className: classNames(p.className, className)\n})));"],"names":["usePlaceholder","_ref","animation","bg","bsPrefix","size","props","useBootstrapPrefix","className","colProps","useCol","classNames","PlaceholderButton","React","ref","placeholderProps","_jsx","Button","disabled","tabIndex","displayName","Placeholder","as","Component","Object","assign","BasicPlaceholders","Card","children","_jsxs","Body","Row","Col","md","Img","variant","src","img1","Title","Text","img2","xs","PlaceholdersAnimation","PlaceholdersConcept","PlaceholdersWidth","style","width","PlaceholdersWithSizes","PlaceholdersWithVariants","Placeholders","usePageTitle","title","breadCrumbItems","path","label","active","xl","prefix","buttonProps","tagName","useButtonProps","href","CardBody","CardFooter","CardHeader","contextValue","useMemo","cardHeaderBsPrefix","CardHeaderContext","Provider","value","CardImg","CardImgOverlay","CardLink","DivStyledAsH6","divWithClassName","CardSubtitle","CardText","DivStyledAsH5","CardTitle","text","border","body","Subtitle","Link","Header","Footer","ImgOverlay","context","p"],"sourceRoot":""}