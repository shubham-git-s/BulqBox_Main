{"version":3,"file":"static/js/2980.1fb5aeee.chunk.js","mappings":"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","sources":["pages/dashboards/DashBoard1/Statistics.tsx","pages/dashboards/DashBoard1/SalesChart.tsx","pages/dashboards/DashBoard1/StatisticsChart.tsx","pages/dashboards/DashBoard1/RevenueChart.tsx","pages/dashboards/DashBoard1/Users.tsx","pages/dashboards/DashBoard1/Inbox.tsx","pages/dashboards/DashBoard1/Projects.tsx","pages/dashboards/DashBoard1/data.ts","pages/dashboards/DashBoard1/index.tsx","../node_modules/react-bootstrap/esm/Table.js"],"sourcesContent":["import { Col, Row } from 'react-bootstrap';\n\n// component\nimport StatisticsWidget1 from '../../../components/StatisticsWidget1';\nimport StatisticsWidget2 from '../../../components/StatisticsWidget2';\n\nconst Statistics = () => {\n    return (\n        <Row>\n            <Col xl={3} md={6}>\n                <StatisticsWidget1\n                    title=\"Total Revenue\"\n                    data={58}\n                    stats={256}\n                    color={'#f05050'}\n                    subTitle=\"Revenue today\"\n                />\n            </Col>\n            <Col xl={3} md={6}>\n                <StatisticsWidget2\n                    variant=\"success\"\n                    title=\"Sales Analytics\"\n                    trendValue=\"32%\"\n                    trendIcon=\"mdi mdi-trending-up\"\n                    stats={8451}\n                    subTitle=\"Revenue today\"\n                    progress={77}\n                />\n            </Col>\n            <Col xl={3} md={6}>\n                <StatisticsWidget1\n                    title=\"Statistics\"\n                    color={'#ffbd4a'}\n                    data={80}\n                    stats={4569}\n                    subTitle=\"Revenue today\"\n                />\n            </Col>\n            <Col xl={3} md={6}>\n                <StatisticsWidget2\n                    variant=\"pink\"\n                    title=\"Daily Sales\"\n                    trendValue=\"32%\"\n                    trendIcon=\"mdi mdi-trending-up\"\n                    stats={158}\n                    subTitle=\"Revenue today\"\n                    progress={77}\n                />\n            </Col>\n        </Row>\n    );\n};\n\nexport default Statistics;\n","import { Card, Dropdown } from 'react-bootstrap';\nimport Chart from 'react-apexcharts';\nimport { ApexOptions } from 'apexcharts';\n\nconst SalesChart = () => {\n    const apexOpts: ApexOptions = {\n        chart: {\n            type: 'donut',\n        },\n        plotOptions: {\n            pie: {\n                expandOnClick: true,\n                donut: {\n                    labels: {\n                        show: true,\n                        name: {\n                            show: true,\n                            formatter: (val: string) => {\n                                return val;\n                            },\n                            offsetY: 4,\n                            color: '#98a6ad',\n                        },\n                        value: {\n                            show: true,\n                            formatter: (val: string) => {\n                                return val;\n                            },\n                            color: '#98a6ad',\n                        },\n                    },\n                },\n            },\n        },\n        dataLabels: {\n            enabled: false,\n        },\n        colors: ['#6658dd', '#ff8acc', '#35b8e0'],\n        legend: {\n            show: true,\n            position: 'bottom',\n            height: 40,\n            labels: {\n                useSeriesColors: true,\n            },\n        },\n        labels: ['In-Store Sales', 'Download Sales', 'Mail-Order Sales'],\n        tooltip: {\n            enabled: false,\n        },\n    };\n\n    const apexData = [30, 12, 20];\n\n    return (\n        <Card>\n            <Card.Body>\n                <Dropdown className=\"float-end\" align=\"end\">\n                    <Dropdown.Toggle as=\"a\" className=\"cursor-pointer card-drop\">\n                        <i className=\"mdi mdi-dots-vertical\"></i>\n                    </Dropdown.Toggle>\n                    <Dropdown.Menu>\n                        <Dropdown.Item>Action</Dropdown.Item>\n                        <Dropdown.Item>Anothther Action</Dropdown.Item>\n                        <Dropdown.Item>Something Else</Dropdown.Item>\n                        <Dropdown.Item>Separated link</Dropdown.Item>\n                    </Dropdown.Menu>\n                </Dropdown>\n\n                <h4 className=\"header-title mt-0\">Daily Sales</h4>\n\n                <div dir=\"ltr\">\n                    <Chart\n                        options={apexOpts}\n                        series={apexData}\n                        type=\"donut\"\n                        height={302}\n                        className=\"apex-charts mt-2\"\n                    />\n                </div>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default SalesChart;\n","import { ApexOptions } from 'apexcharts';\nimport Chart from 'react-apexcharts';\nimport { Card, Dropdown } from 'react-bootstrap';\n\nconst StatisticsChart = () => {\n    const apexOpts: ApexOptions = {\n        chart: {\n            type: 'bar',\n            toolbar: {\n                show: false,\n            },\n        },\n        plotOptions: {\n            bar: {\n                columnWidth: '20%',\n            },\n        },\n        dataLabels: {\n            enabled: false,\n        },\n        stroke: {\n            show: false,\n        },\n        xaxis: {\n            categories: ['2010', '2011', '2012', '2013', '2014', '2015'],\n            axisBorder: {\n                show: false,\n            },\n            axisTicks: {\n                show: false,\n            },\n            labels: {\n                style: {\n                    colors: '#adb5bd',\n                },\n            },\n        },\n        yaxis: {\n            labels: {\n                style: {\n                    colors: '#adb5bd',\n                },\n            },\n        },\n        grid: {\n            show: false,\n            padding: {\n                top: 0,\n                right: 0,\n                bottom: 0,\n                left: 0,\n            },\n        },\n        fill: {\n            opacity: 1,\n        },\n        colors: ['#188ae2'],\n        tooltip: {\n            theme: 'dark',\n        },\n    };\n\n    const apexData = [\n        {\n            name: 'Statistics',\n            data: [75, 42, 75, 38, 19, 93],\n        },\n    ];\n\n    return (\n        <Card>\n            <Card.Body>\n                <Dropdown className=\"float-end\" align=\"end\">\n                    <Dropdown.Toggle as=\"a\" className=\"cursor-pointer card-drop\">\n                        <i className=\"mdi mdi-dots-vertical\"></i>\n                    </Dropdown.Toggle>\n                    <Dropdown.Menu>\n                        <Dropdown.Item>Action</Dropdown.Item>\n                        <Dropdown.Item>Anothther Action</Dropdown.Item>\n                        <Dropdown.Item>Something Else</Dropdown.Item>\n                        <Dropdown.Item>Separated link</Dropdown.Item>\n                    </Dropdown.Menu>\n                </Dropdown>\n\n                <h4 className=\"header-title mt-0\">Statistics</h4>\n\n                <div dir=\"ltr\">\n                    <Chart options={apexOpts} series={apexData} type=\"bar\" height={268} className=\"apex-charts mt-2\" />\n                </div>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default StatisticsChart;\n","import { Card, Dropdown } from 'react-bootstrap';\nimport Chart from 'react-apexcharts';\nimport { ApexOptions } from 'apexcharts';\n\nconst RevenueChart = () => {\n    const options: ApexOptions = {\n        chart: {\n            height: 350,\n            type: 'line',\n            toolbar: {\n                show: false,\n            },\n            stacked: false,\n            zoom: {\n                enabled: false,\n            },\n        },\n        stroke: {\n            curve: 'smooth',\n            width: [3, 3],\n        },\n        dataLabels: {\n            enabled: false,\n        },\n        legend: {\n            show: false,\n        },\n        fill: {\n            type: 'solid',\n            opacity: [0, 1],\n        },\n        colors: ['#3cc469', '#188ae2'],\n        xaxis: {\n            categories: ['2008', '2009', '2010', '2011', '2012', '2013', '2014', '2015'],\n            axisBorder: {\n                show: false,\n            },\n            axisTicks: {\n                show: false,\n            },\n            labels: {\n                style: {\n                    colors: '#adb5bd',\n                },\n            },\n        },\n        yaxis: {\n            tickAmount: 4,\n            min: 0,\n            max: 100,\n            labels: {\n                style: {\n                    colors: '#adb5bd',\n                },\n            },\n        },\n        grid: {\n            show: false,\n            padding: {\n                top: 0,\n                bottom: 0,\n            },\n        },\n        tooltip: {\n            theme: 'dark',\n        },\n    };\n\n    const series = [\n        {\n            name: 'Series A',\n            type: 'area',\n            data: [50, 75, 30, 50, 75, 50, 75, 100],\n        },\n        {\n            name: 'Series B',\n            type: 'line',\n            data: [0, 40, 80, 40, 10, 40, 50, 70],\n        },\n    ];\n\n    return (\n        <Card>\n            <Card.Body>\n                <Dropdown className=\"float-end\" align=\"end\">\n                    <Dropdown.Toggle as=\"a\" className=\"cursor-pointer card-drop\">\n                        <i className=\"mdi mdi-dots-vertical\"></i>\n                    </Dropdown.Toggle>\n                    <Dropdown.Menu>\n                        <Dropdown.Item>Action</Dropdown.Item>\n                        <Dropdown.Item>Anothther Action</Dropdown.Item>\n                        <Dropdown.Item>Something Else</Dropdown.Item>\n                        <Dropdown.Item>Separated link</Dropdown.Item>\n                    </Dropdown.Menu>\n                </Dropdown>\n\n                <h4 className=\"header-title mt-0\">Total Revenue</h4>\n\n                <div dir=\"ltr\">\n                    <Chart options={options} series={series} type=\"line\" height={268} className=\"apex-charts mt-2\" />\n                </div>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default RevenueChart;\n","import { Col, Row } from 'react-bootstrap';\n\n// component\nimport StatisticsWidget3 from '../../../components/StatisticsWidget3';\n\n// images\nimport avatar1 from '../../../assets/images/users/user-3.jpg';\nimport avatar2 from '../../../assets/images/users/user-2.jpg';\nimport avatar3 from '../../../assets/images/users/user-1.jpg';\nimport avatar4 from '../../../assets/images/users/user-10.jpg';\n\nconst Users = () => {\n    return (\n        <Row>\n            <Col xl={3} md={6}>\n                <StatisticsWidget3\n                    variant=\"warning\"\n                    avatar={avatar1}\n                    name=\"Chadengle\"\n                    emailId=\"coderthemes@gmail.com\"\n                    position=\"Admin\"\n                />\n            </Col>\n            <Col xl={3} md={6}>\n                <StatisticsWidget3\n                    variant=\"secondary\"\n                    avatar={avatar2}\n                    name=\"Michael Zenaty\"\n                    emailId=\"coderthemes@gmail.com\"\n                    position=\"Support Lead\"\n                />\n            </Col>\n            <Col xl={3} md={6}>\n                <StatisticsWidget3\n                    variant=\"success\"\n                    avatar={avatar3}\n                    name=\"Stillnotdavid\"\n                    emailId=\"coderthemes@gmail.com\"\n                    position=\"Designer\"\n                />\n            </Col>\n            <Col xl={3} md={6}>\n                <StatisticsWidget3\n                    variant=\"info\"\n                    avatar={avatar4}\n                    name=\"Tomaslau\"\n                    emailId=\"coderthemes@gmail.com\"\n                    position=\"Developer\"\n                />\n            </Col>\n        </Row>\n    );\n};\n\nexport default Users;\n","import { Card, Dropdown } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\n// types\nimport { Message } from './types';\n\ntype InboxProps = {\n    messages: Message[];\n};\n\nconst Inbox = ({ messages }: InboxProps) => {\n    return (\n        <Card>\n            <Card.Body>\n                <Dropdown className=\"float-end\" align=\"end\">\n                    <Dropdown.Toggle as=\"a\" className=\"cursor-pointer card-drop\">\n                        <i className=\"mdi mdi-dots-vertical\"></i>\n                    </Dropdown.Toggle>\n                    <Dropdown.Menu>\n                        <Dropdown.Item>Action</Dropdown.Item>\n                        <Dropdown.Item>Anothther Action</Dropdown.Item>\n                        <Dropdown.Item>Something Else</Dropdown.Item>\n                        <Dropdown.Item>Separated link</Dropdown.Item>\n                    </Dropdown.Menu>\n                </Dropdown>\n\n                <h4 className=\"header-title mb-3\">Inbox</h4>\n\n                <div className=\"inbox-widget\">\n                    {(messages || []).map((message, index) => {\n                        return (\n                            <div className=\"inbox-item\" key={index.toString()}>\n                                <Link to=\"#\">\n                                    <div className=\"inbox-item-img\">\n                                        <img src={message.avatar} alt=\"\" className=\"rounded-circle\" />\n                                    </div>\n                                    <h5 className=\"inbox-item-author mt-0 mb-1\">{message.sender}</h5>\n                                    <p className=\"inbox-item-text\">{message.text}</p>\n                                    <p className=\"inbox-item-date\">{message.time}</p>\n                                </Link>\n                            </div>\n                        );\n                    })}\n                </div>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default Inbox;\n","import { Badge, Card, Dropdown, Table } from 'react-bootstrap';\n\n// type\nimport { ProjectDetail } from './types';\n\ntype ProjectsProps = {\n    projectDetails: ProjectDetail[];\n};\n\nconst Projects = ({ projectDetails }: ProjectsProps) => {\n    return (\n        <Card>\n            <Card.Body>\n                <Dropdown className=\"float-end\" align=\"end\">\n                    <Dropdown.Toggle as=\"a\" className=\"cursor-pointer card-drop\">\n                        <i className=\"mdi mdi-dots-vertical\"></i>\n                    </Dropdown.Toggle>\n                    <Dropdown.Menu>\n                        <Dropdown.Item>Action</Dropdown.Item>\n                        <Dropdown.Item>Anothther Action</Dropdown.Item>\n                        <Dropdown.Item>Something Else</Dropdown.Item>\n                        <Dropdown.Item>Separated link</Dropdown.Item>\n                    </Dropdown.Menu>\n                </Dropdown>\n\n                <h4 className=\"header-title mt-0 mb-3\">Latest Projects</h4>\n\n                <Table responsive hover className=\"mb-0\">\n                    <thead>\n                        <tr>\n                            <th>#</th>\n                            <th>Project Name</th>\n                            <th>Start Date</th>\n                            <th>Due Date</th>\n                            <th>Status</th>\n                            <th>Assign</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {(projectDetails || []).map((projectDetail, index) => {\n                            return (\n                                <tr key={index.toString()}>\n                                    <td>{projectDetail.id}</td>\n                                    <td>{projectDetail.name}</td>\n                                    <td>{projectDetail.startDate}</td>\n                                    <td>{projectDetail.dueDate}</td>\n                                    <td>\n                                        <Badge bg={projectDetail.variant}>{projectDetail.status}</Badge>\n                                    </td>\n                                    <td>{projectDetail.clients}</td>\n                                </tr>\n                            );\n                        })}\n                    </tbody>\n                </Table>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default Projects;\n","// types\nimport { Message, ProjectDetail } from './types';\n\n// images\nimport avatar1 from '../../../assets/images/users/user-1.jpg';\nimport avatar2 from '../../../assets/images/users/user-2.jpg';\nimport avatar3 from '../../../assets/images/users/user-3.jpg';\nimport avatar4 from '../../../assets/images/users/user-4.jpg';\nimport avatar5 from '../../../assets/images/users/user-5.jpg';\n\nconst messages: Message[] = [\n    {\n        id: 1,\n        avatar: avatar1,\n        sender: 'Chadengle',\n        text: \"Hey! there I'm available...\",\n        time: '13:40 PM',\n    },\n    {\n        id: 2,\n        avatar: avatar2,\n        sender: 'Tomaslau',\n        text: \"I've finished it! See you so...\",\n        time: '13:34 PM',\n    },\n    {\n        id: 3,\n        avatar: avatar3,\n        sender: 'Stillnotdavid',\n        text: 'This theme is awesome!',\n        time: '13:17 PM',\n    },\n    {\n        id: 4,\n        avatar: avatar4,\n        sender: 'Kurafire',\n        text: 'Nice to meet you',\n        time: '12:20 PM',\n    },\n    {\n        id: 5,\n        avatar: avatar5,\n        sender: 'Shahedk',\n        text: \"Hey! there I'm available...\",\n        time: '10:15 PM',\n    },\n];\n\nconst projectDetails: ProjectDetail[] = [\n    {\n        id: 1,\n        name: 'Adminto Admin v1',\n        startDate: '01/01/2017',\n        dueDate: '26/04/2017',\n        status: 'Released',\n        variant: 'danger',\n        clients: 'Coderthemes',\n    },\n    {\n        id: 2,\n        name: 'Adminto Frontend v1',\n        startDate: '01/01/2017',\n        dueDate: '26/04/2017',\n        status: 'Released',\n        variant: 'success',\n        clients: 'Adminto admin',\n    },\n    {\n        id: 3,\n        name: 'Adminto Admin v1.1',\n        startDate: '01/05/2017',\n        dueDate: '10/05/2017',\n        status: 'Pending',\n        variant: 'pink',\n        clients: 'Coderthemes',\n    },\n    {\n        id: 4,\n        name: 'Adminto Frontend v1.1',\n        startDate: '01/01/2017',\n        dueDate: '31/05/2017',\n        status: 'Work in Progress',\n        variant: 'purple',\n        clients: 'Adminto admin',\n    },\n    {\n        id: 5,\n        name: 'Adminto Admin v1.3',\n        startDate: '01/01/2017',\n        dueDate: '31/05/2017',\n        status: 'Coming soon',\n        variant: 'warning',\n        clients: 'Coderthemes',\n    },\n    {\n        id: 6,\n        name: 'Adminto Admin v1.3',\n        startDate: '01/01/2017',\n        dueDate: '31/05/2017',\n        status: 'Coming soon',\n        variant: 'blue',\n        clients: 'Adminto admin',\n    },\n];\n\nexport { messages, projectDetails };\n","import { Col, Row } from 'react-bootstrap';\n\n// hooks\nimport { usePageTitle } from '../../../hooks';\n\n// component\nimport Statistics from './Statistics';\nimport SalesChart from './SalesChart';\nimport StatisticsChart from './StatisticsChart';\nimport RevenueChart from './RevenueChart';\nimport Users from './Users';\nimport Inbox from './Inbox';\nimport Projects from './Projects';\n\n// dummy data\nimport { messages, projectDetails } from './data';\n\nconst DashBoard1 = () => {\n    // set pagetitle\n    usePageTitle({\n        title: 'DashBoard',\n        breadCrumbItems: [\n            {\n                path: '/dashboard',\n                label: 'DashBoard',\n                active: true,\n            },\n        ],\n    });\n\n    return (\n        <>\n            <Statistics />\n\n            <Row>\n                <Col xl={4}>\n                    <SalesChart />\n                </Col>\n                <Col xl={4}>\n                    <StatisticsChart />\n                </Col>\n                <Col xl={4}>\n                    <RevenueChart />\n                </Col>\n            </Row>\n\n            <Users />\n\n            <Row>\n                <Col xl={4}>\n                    <Inbox messages={messages} />\n                </Col>\n                <Col xl={8}>\n                    <Projects projectDetails={projectDetails} />\n                </Col>\n            </Row>\n        </>\n    );\n};\n\nexport default DashBoard1;\n","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Table = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  striped,\n  bordered,\n  borderless,\n  hover,\n  size,\n  variant,\n  responsive,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  const classes = classNames(className, decoratedBsPrefix, variant && `${decoratedBsPrefix}-${variant}`, size && `${decoratedBsPrefix}-${size}`, striped && `${decoratedBsPrefix}-${typeof striped === 'string' ? `striped-${striped}` : 'striped'}`, bordered && `${decoratedBsPrefix}-bordered`, borderless && `${decoratedBsPrefix}-borderless`, hover && `${decoratedBsPrefix}-hover`);\n  const table = /*#__PURE__*/_jsx(\"table\", {\n    ...props,\n    className: classes,\n    ref: ref\n  });\n  if (responsive) {\n    let responsiveClass = `${decoratedBsPrefix}-responsive`;\n    if (typeof responsive === 'string') {\n      responsiveClass = `${responsiveClass}-${responsive}`;\n    }\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: responsiveClass,\n      children: table\n    });\n  }\n  return table;\n});\nexport default Table;"],"names":["Statistics","_jsxs","Row","children","_jsx","Col","xl","md","StatisticsWidget1","title","data","stats","color","subTitle","StatisticsWidget2","variant","trendValue","trendIcon","progress","SalesChart","Card","Body","Dropdown","className","align","Toggle","as","Menu","Item","dir","Chart","options","chart","type","plotOptions","pie","expandOnClick","donut","labels","show","name","formatter","val","offsetY","value","dataLabels","enabled","colors","legend","position","height","useSeriesColors","tooltip","series","StatisticsChart","toolbar","bar","columnWidth","stroke","xaxis","categories","axisBorder","axisTicks","style","yaxis","grid","padding","top","right","bottom","left","fill","opacity","theme","RevenueChart","stacked","zoom","curve","width","tickAmount","min","max","Users","StatisticsWidget3","avatar","avatar1","emailId","avatar2","avatar3","avatar4","_ref","messages","map","message","index","Link","to","src","alt","sender","text","time","toString","projectDetails","Table","responsive","hover","projectDetail","id","startDate","dueDate","Badge","bg","status","clients","avatar5","DashBoard1","usePageTitle","breadCrumbItems","path","label","active","_Fragment","Inbox","Projects","React","ref","bsPrefix","striped","bordered","borderless","size","props","decoratedBsPrefix","useBootstrapPrefix","classes","classNames","table","responsiveClass"],"sourceRoot":""}