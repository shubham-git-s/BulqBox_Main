{"version":3,"file":"static/js/5297.3c91ebaa.chunk.js","mappings":"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","sources":["pages/other/Gallery/LightBox.tsx","pages/other/Gallery/data.tsx","pages/other/Gallery/index.tsx"],"sourcesContent":["import React from 'react';\nimport Lightbox from 'react-image-lightbox';\n\n// types\nimport { Image } from './types';\n\ntype LightBoxProps = {\n    images: Image[];\n    photoIndex: number;\n    closeLightbox: () => void;\n    moveNext: () => void;\n    movePrev: () => void;\n};\n\nconst LightBox = ({ images, photoIndex, closeLightbox, moveNext, movePrev }: LightBoxProps) => {\n    return (\n        <>\n            <Lightbox\n                mainSrc={images[photoIndex].src}\n                nextSrc={images[(photoIndex + 1) % images.length].src}\n                prevSrc={images[(photoIndex + images.length - 1) % images.length].src}\n                onCloseRequest={closeLightbox}\n                onMovePrevRequest={movePrev}\n                onMoveNextRequest={moveNext}\n                imageTitle={<p>{images[photoIndex].caption}</p>}\n                mainSrcThumbnail={images[photoIndex].caption}\n            />\n        </>\n    );\n};\n\nexport default LightBox;\n","// types\nimport { GalleryItem } from './types';\n\n// images\nimport img1 from '../../../assets/images/gallery/1.jpg';\nimport img2 from '../../../assets/images/gallery/2.jpg';\nimport img3 from '../../../assets/images/gallery/3.jpg';\nimport img4 from '../../../assets/images/gallery/4.jpg';\nimport img5 from '../../../assets/images/gallery/5.jpg';\nimport img6 from '../../../assets/images/gallery/6.jpg';\nimport img7 from '../../../assets/images/gallery/7.jpg';\nimport img8 from '../../../assets/images/gallery/8.jpg';\nimport img9 from '../../../assets/images/gallery/9.jpg';\nimport img10 from '../../../assets/images/gallery/10.jpg';\nimport img11 from '../../../assets/images/gallery/11.jpg';\nimport img12 from '../../../assets/images/gallery/12.jpg';\n\nconst gallery: GalleryItem[] = [\n    {\n        id: 1,\n        image: {\n            src: img1,\n            caption: 'Screenshot-1',\n        },\n        title: 'Nature Image',\n        category: ['natural', 'personal'],\n    },\n    {\n        id: 2,\n        image: {\n            src: img2,\n            caption: 'Screenshot-2',\n        },\n        title: 'Gallary Image',\n        category: ['creative', 'personal', 'photography'],\n    },\n    {\n        id: 3,\n        image: {\n            src: img3,\n            caption: 'Screenshot-3',\n        },\n        title: 'Gallary Image',\n        category: ['natural', 'creative'],\n    },\n    {\n        id: 4,\n        image: {\n            src: img4,\n            caption: 'Screenshot-4',\n        },\n        title: 'Gallary Image',\n        category: ['personal', 'photography'],\n    },\n    {\n        id: 5,\n        image: {\n            src: img5,\n            caption: 'Screenshot-5',\n        },\n        title: 'Gallary Image',\n        category: ['creative', 'photography'],\n    },\n    {\n        id: 6,\n        image: {\n            src: img6,\n            caption: 'Screenshot-6',\n        },\n        title: 'Gallary Image',\n        category: ['natural', 'photography'],\n    },\n    {\n        id: 7,\n        image: {\n            src: img7,\n            caption: 'Screenshot-7',\n        },\n        title: 'Gallary Image',\n        category: ['personal', 'photography', 'creative'],\n    },\n    {\n        id: 8,\n        image: {\n            src: img8,\n            caption: 'Screenshot-8',\n        },\n        title: 'Gallary Image',\n        category: ['creative', 'photography', 'natural'],\n    },\n    {\n        id: 9,\n        image: {\n            src: img9,\n            caption: 'Screenshot-9',\n        },\n        title: 'Gallary Image',\n        category: ['natural', 'personal'],\n    },\n    {\n        id: 10,\n        image: {\n            src: img10,\n            caption: 'Screenshot-10',\n        },\n        title: 'Gallary Image',\n        category: ['photography', 'creative'],\n    },\n    {\n        id: 11,\n        image: {\n            src: img11,\n            caption: 'Screenshot-11',\n        },\n        title: 'Gallary Image',\n        category: ['creative', 'photography'],\n    },\n    {\n        id: 12,\n        image: {\n            src: img12,\n            caption: 'Screenshot-12',\n        },\n        title: 'Gallary Image',\n        category: ['natural', 'creative', 'personal'],\n    },\n];\n\nexport { gallery };\n","import React, { useState } from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport Masonry, { ResponsiveMasonry } from 'react-responsive-masonry';\n\n// hooks\nimport { usePageTitle } from '../../../hooks';\n\n// components\nimport LightBox from './LightBox';\n\n// types\nimport { GalleryItem, Image } from './types';\n\n// dummy data\nimport { gallery as data } from './data';\n\nconst Gallery = () => {\n    // set pagetitle\n    usePageTitle({\n        title: 'Gallery',\n        breadCrumbItems: [\n            {\n                path: '/pages/gallery',\n                label: 'Extra Pages',\n            },\n            {\n                path: '/pages/gallery',\n                label: 'Gallery',\n                active: true,\n            },\n        ],\n    });\n\n    const [gallery, setGallery] = useState<GalleryItem[]>(data);\n    const [category, setCategory] = useState<string>('all');\n    const [galleryImages, setGalleryImages] = useState<Image[]>(\n        (data || []).map((album) => {\n            return album.image;\n        })\n    );\n    const [isOpen, setIsOpen] = useState<boolean>(false);\n    const [photoIndex, setPhotoIndex] = useState<number>(0);\n\n    /**\n     * filter images by category\n     * @param category category\n     */\n    const filterImages = (category: string) => {\n        setCategory(category);\n        setTimeout(() => {\n            const galleryAlbums =\n                category === 'all' ? data : data.filter((album) => album.category?.includes(category));\n            setGallery(galleryAlbums);\n            setGalleryImages(\n                (galleryAlbums || []).map((album) => {\n                    return album.image;\n                })\n            );\n        }, 300);\n    };\n\n    /*\n     * handle lightbox events\n     */\n    const openLightbox = (index: number) => {\n        setPhotoIndex(index);\n        setIsOpen(true);\n    };\n\n    const closeLightbox = () => {\n        setIsOpen(false);\n    };\n\n    const moveNext = () => {\n        setPhotoIndex((prevState) => (prevState + 1) % galleryImages.length);\n    };\n\n    const movePrev = () => {\n        setPhotoIndex((prevState) => (prevState + galleryImages.length - 1) % galleryImages.length);\n    };\n\n    return (\n        <>\n            <Row>\n                <Col lg={12}>\n                    <div className=\"portfolioFilter\">\n                        <Link\n                            to=\"#\"\n                            className={classNames('filter-menu-item', 'me-1', {\n                                current: category === 'all',\n                            })}\n                            onClick={() => filterImages('all')}\n                        >\n                            All\n                        </Link>\n                        <Link\n                            to=\"#\"\n                            className={classNames('filter-menu-item', 'me-1', {\n                                current: category === 'natural',\n                            })}\n                            onClick={() => filterImages('natural')}\n                        >\n                            Natural\n                        </Link>\n                        <Link\n                            to=\"#\"\n                            className={classNames('filter-menu-item', 'me-1', {\n                                current: category === 'creative',\n                            })}\n                            onClick={() => filterImages('creative')}\n                        >\n                            Creative\n                        </Link>\n                        <Link\n                            to=\"#\"\n                            className={classNames('filter-menu-item', 'me-1', {\n                                current: category === 'personal',\n                            })}\n                            onClick={() => filterImages('personal')}\n                        >\n                            Personal\n                        </Link>\n                        <Link\n                            to=\"#\"\n                            className={classNames('filter-menu-item', 'me-1', {\n                                current: category === 'photography',\n                            })}\n                            onClick={() => filterImages('photography')}\n                        >\n                            Photography\n                        </Link>\n                    </div>\n                </Col>\n            </Row>\n\n            <div className=\"port mb-2 mt-4\">\n                <Row className=\"portfolioContainer\">\n                    <ResponsiveMasonry columnsCountBreakPoints={{ 350: 1, 750: 2, 900: 4 }}>\n                        <Masonry gutter=\"1.5rem\">\n                            {(gallery || []).map((item, index) => {\n                                return (\n                                    <React.Fragment key={index.toString()}>\n                                        <div className=\"gal-detail thumb mt-0\">\n                                            <Link\n                                                to=\"#\"\n                                                className=\"image-popup\"\n                                                title={item.image!.caption}\n                                                onClick={() => openLightbox(index)}\n                                            >\n                                                <img src={item.image!.src} alt=\"\" className=\"thumb-img img-fluid\" />\n                                            </Link>\n\n                                            <div className=\"text-center\">\n                                                <h4>{item.title}</h4>\n                                                <p className=\"font-13 text-muted mb-2\">\n                                                    {(item.category || [])\n                                                        .map((category, index) => {\n                                                            return (\n                                                                category.charAt(0).toUpperCase() + category!.slice(1)\n                                                            );\n                                                        })\n                                                        .join(', ')}\n                                                </p>\n                                            </div>\n                                        </div>\n                                    </React.Fragment>\n                                );\n                            })}\n                        </Masonry>\n                    </ResponsiveMasonry>\n                </Row>\n            </div>\n            {/* image lightbox */}\n            {isOpen && (\n                <LightBox\n                    images={galleryImages}\n                    photoIndex={photoIndex}\n                    closeLightbox={closeLightbox}\n                    moveNext={moveNext}\n                    movePrev={movePrev}\n                />\n            )}\n        </>\n    );\n};\n\nexport default Gallery;\n"],"names":["_ref","images","photoIndex","closeLightbox","moveNext","movePrev","_jsx","_Fragment","children","Lightbox","mainSrc","src","nextSrc","length","prevSrc","onCloseRequest","onMovePrevRequest","onMoveNextRequest","imageTitle","caption","mainSrcThumbnail","gallery","id","image","title","category","Gallery","usePageTitle","breadCrumbItems","path","label","active","setGallery","useState","data","setCategory","galleryImages","setGalleryImages","map","album","isOpen","setIsOpen","setPhotoIndex","filterImages","setTimeout","galleryAlbums","filter","_album$category","includes","_jsxs","Row","Col","lg","className","Link","to","classNames","current","onClick","ResponsiveMasonry","columnsCountBreakPoints","Masonry","gutter","item","index","React","openLightbox","alt","charAt","toUpperCase","slice","join","toString","LightBox","prevState"],"sourceRoot":""}