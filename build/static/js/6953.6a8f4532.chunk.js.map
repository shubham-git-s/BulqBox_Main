{"version":3,"file":"static/js/6953.6a8f4532.chunk.js","mappings":"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","sources":["components/form/VerticalForm.tsx","components/form/FormInput.tsx","pages/apps/Projects/data.ts","pages/apps/Projects/index.tsx"],"sourcesContent":["import React from 'react';\nimport { useForm, Resolver, SubmitHandler, UnpackNestedValue, DeepPartial, FieldValues, DefaultValues } from 'react-hook-form';\n\ntype VerticalFromProps<TFormValues extends FieldValues> = {\n    defaultValues?: UnpackNestedValue<DeepPartial<TFormValues>>;\n    resolver?: Resolver<TFormValues>;\n    children?: React.ReactNode;\n    onSubmit: SubmitHandler<TFormValues>;\n    formClass?: string;\n};\n\nconst VerticalForm = <TFormValues extends Record<string, any> = Record<string, any>>({\n    defaultValues,\n    resolver,\n    children,\n    onSubmit,\n    formClass,\n}: VerticalFromProps<TFormValues>) => {\n    /*\n     * form methods\n     */\n    const methods = useForm<TFormValues>({\n        defaultValues: defaultValues as DefaultValues<TFormValues>,\n        resolver,\n    });\n    const {\n        handleSubmit,\n        register,\n        control,\n        formState: { errors },\n    } = methods;\n\n    return (\n        <form onSubmit={handleSubmit(onSubmit)} className={formClass} noValidate>\n            {Array.isArray(children)\n                ? children.map((child) => {\n                      return child.props && child.props.name\n                          ? React.createElement(child.type, {\n                                ...{\n                                    ...child.props,\n                                    register,\n                                    key: child.props.name,\n                                    errors,\n                                    control,\n                                },\n                            })\n                          : child;\n                  })\n                : children}\n        </form>\n    );\n};\n\nexport default VerticalForm;\n","import { useState, InputHTMLAttributes } from 'react';\nimport { Form, InputGroup } from 'react-bootstrap';\nimport classNames from 'classnames';\n\nimport { FieldErrors, Control } from 'react-hook-form';\n\ntype FormInputProps = InputHTMLAttributes<HTMLInputElement> & {\n    endIcon?: boolean;\n    label?: string;\n    type?: string;\n    name: string;\n    comp?: string;\n    placeholder?: string;\n    register?: any;\n    errors?: FieldErrors;\n    control?: Control<any>;\n    className?: string;\n    labelClassName?: string;\n    containerClass?: string;\n    textClassName?: string;\n    refCallback?: any;\n    action?: React.ReactNode;\n    rows?: number;\n};\n\n/* Password Input with addons */\nconst PasswordInput = ({\n    name,\n    placeholder,\n    refCallback,\n    errors,\n    control,\n    register,\n    className,\n    ...otherProps\n}: FormInputProps) => {\n    const [showPassword, setShowPassword] = useState<boolean>(false);\n\n    return (\n        <>\n            <InputGroup className=\"mb-0\">\n                <Form.Control\n                    type={showPassword ? 'text' : 'password'}\n                    placeholder={placeholder}\n                    name={name}\n                    id={name}\n                    as=\"input\"\n                    ref={(r: HTMLInputElement) => {\n                        if (refCallback) refCallback(r);\n                    }}\n                    className={className}\n                    isInvalid={errors && errors[name] ? true : false}\n                    {...(register ? register(name) : {})}\n                    autoComplete={name}\n                    {...otherProps}\n                />\n                <div\n                    className={classNames('input-group-text', 'input-group-password', {\n                        'show-password': showPassword,\n                    })}\n                    data-password={showPassword ? 'true' : 'false'}\n                >\n                    <span\n                        className=\"password-eye\"\n                        onClick={() => {\n                            setShowPassword(!showPassword);\n                        }}\n                    ></span>\n                </div>\n            </InputGroup>\n\n            {errors && errors[name] ? (\n                <Form.Control.Feedback type=\"invalid\" className=\"d-block\">\n                   {errors[name]?.['message']}\n                </Form.Control.Feedback>\n            ) : null}\n        </>\n    );\n};\n\n// textual form-controls—like inputs, passwords, textareas etc.\nconst TextualInput = ({\n    type,\n    name,\n    placeholder,\n    endIcon,\n    register,\n    errors,\n    comp,\n    rows,\n    className,\n    refCallback,\n    ...otherProps\n}: FormInputProps) => {\n    return (\n        <>\n            {type === 'password' && endIcon ? (\n                <>\n                    <PasswordInput\n                        name={name}\n                        placeholder={placeholder}\n                        refCallback={refCallback}\n                        errors={errors!}\n                        register={register}\n                        className={className}\n                        {...otherProps}\n                    />\n                </>\n            ) : (\n                <>\n                    <Form.Control\n                        type={type}\n                        placeholder={placeholder}\n                        name={name}\n                        as={comp}\n                        id={name}\n                        ref={(r: HTMLInputElement) => {\n                            if (refCallback) refCallback(r);\n                        }}\n                        className={className}\n                        isInvalid={errors && errors[name] ? true : false}\n                        {...(register ? register(name) : {})}\n                        rows={rows}\n                        {...otherProps}\n                    ></Form.Control>\n\n                    {errors && errors[name] ? (\n                        <Form.Control.Feedback type=\"invalid\" className=\"d-block\">\n                           {errors[name]?.['message']}\n                        </Form.Control.Feedback>\n                    ) : null}\n                </>\n            )}\n        </>\n    );\n};\n\n// non-textual checkbox and radio controls\nconst CheckInput = ({\n    type,\n    label,\n    name,\n    placeholder,\n    register,\n    errors,\n    comp,\n    rows,\n    className,\n    refCallback,\n    ...otherProps\n}: FormInputProps) => {\n    return (\n        <>\n            <Form.Check\n                type={type}\n                label={label}\n                name={name}\n                id={name}\n                ref={(r: HTMLInputElement) => {\n                    if (refCallback) refCallback(r);\n                }}\n                className={className}\n                isInvalid={errors && errors[name] ? true : false}\n                {...(register ? register(name) : {})}\n                {...otherProps}\n            />\n\n            {errors && errors[name] ? (\n                <Form.Control.Feedback type=\"invalid\" className=\"d-block\">\n                    {errors[name]?.['message']}\n                </Form.Control.Feedback>\n            ) : null}\n        </>\n    );\n};\n\n// handle select controls\nconst SelectInput = ({\n    type,\n    label,\n    name,\n    placeholder,\n    register,\n    errors,\n    comp,\n    className,\n    children,\n    refCallback,\n    ...otherProps\n}: FormInputProps) => {\n    return (\n        <>\n            <Form.Select\n                type={type}\n                label={label}\n                name={name}\n                id={name}\n                ref={(r: HTMLInputElement) => {\n                    if (refCallback) refCallback(r);\n                }}\n                children={children}\n                className={className}\n                isInvalid={errors && errors[name] ? true : false}\n                {...(register ? register(name) : {})}\n                {...otherProps}\n            />\n\n            {errors && errors[name] ? (\n                <Form.Control.Feedback type=\"invalid\">{errors[name]?.['message']}</Form.Control.Feedback>\n            ) : null}\n        </>\n    );\n};\n\nconst FormInput = ({\n    label,\n    type,\n    name,\n    placeholder,\n    endIcon,\n    register,\n    errors,\n    control,\n    className,\n    labelClassName,\n    containerClass,\n    refCallback,\n    children,\n    action,\n    rows,\n    ...otherProps\n}: FormInputProps) => {\n    // handle input type\n    const comp = type === 'textarea' ? 'textarea' : type === 'select' ? 'select' : 'input';\n\n    const hasEndIcon = endIcon !== undefined ? endIcon : true;\n\n    return (\n        <>\n            {type === 'hidden' ? (\n                <input type={type} name={name} {...(register ? register(name) : {})} {...otherProps} />\n            ) : (\n                <>\n                    {type === 'select' ? (\n                        <Form.Group className={containerClass}>\n                            {label ? (\n                                <>\n                                    <Form.Label className={labelClassName}>{label}</Form.Label>\n                                    {action && action}\n                                </>\n                            ) : null}\n\n                            <SelectInput\n                                type={type}\n                                name={name}\n                                placeholder={placeholder}\n                                refCallback={refCallback}\n                                errors={errors}\n                                register={register}\n                                comp={comp}\n                                className={className}\n                                children={children}\n                                {...otherProps}\n                            />\n                        </Form.Group>\n                    ) : (\n                        <>\n                            {type === 'checkbox' || type === 'radio' ? (\n                                <Form.Group className={containerClass}>\n                                    <CheckInput\n                                        type={type}\n                                        label={label}\n                                        name={name}\n                                        placeholder={placeholder}\n                                        refCallback={refCallback}\n                                        errors={errors}\n                                        register={register}\n                                        comp={comp}\n                                        className={className}\n                                        rows={rows}\n                                        {...otherProps}\n                                    />\n                                </Form.Group>\n                            ) : (\n                                <Form.Group className={containerClass}>\n                                    {label ? (\n                                        <>\n                                            <Form.Label className={labelClassName}>{label}</Form.Label>\n                                            {action && action}\n                                        </>\n                                    ) : null}\n\n                                    <TextualInput\n                                        type={type}\n                                        name={name}\n                                        placeholder={placeholder}\n                                        endIcon={hasEndIcon}\n                                        refCallback={refCallback}\n                                        errors={errors}\n                                        register={register}\n                                        comp={comp}\n                                        className={className}\n                                        rows={rows}\n                                        {...otherProps}\n                                    />\n                                </Form.Group>\n                            )}\n                        </>\n                    )}\n                </>\n            )}\n        </>\n    );\n};\n\nexport default FormInput;\n","// types\nimport { ProjectsList } from './types';\n\n// images\nimport user1 from '../../../assets/images/users/user-1.jpg';\nimport user2 from '../../../assets/images/users/user-2.jpg';\nimport user3 from '../../../assets/images/users/user-3.jpg';\nimport user4 from '../../../assets/images/users/user-4.jpg';\nimport user5 from '../../../assets/images/users/user-5.jpg';\nimport user6 from '../../../assets/images/users/user-6.jpg';\nimport user7 from '../../../assets/images/users/user-7.jpg';\nimport user8 from '../../../assets/images/users/user-8.jpg';\nimport user9 from '../../../assets/images/users/user-9.jpg';\nimport user10 from '../../../assets/images/users/user-10.jpg';\n\nexport const projects: ProjectsList[] = [\n    {\n        id: 1,\n        title: 'New Admin Design',\n        category: 'WEB DESIGN',\n        state: 'Completed',\n        shortDesc:\n            'If several languages coalesce the grammar is more simple and regular than that of the individual languages...',\n        question: 56,\n        comment: 452,\n        teamMembers: [\n            {\n                image: user1,\n                name: 'Mat Helme',\n            },\n            {\n                image: user2,\n                name: 'Michael Zenaty',\n            },\n            {\n                image: user3,\n                name: 'James Anderson',\n            },\n            {\n                image: user4,\n                name: 'Mat Helme',\n            },\n            {\n                image: user5,\n                name: 'Username',\n            },\n        ],\n        progress: 80,\n        variant: 'success',\n    },\n    {\n        id: 2,\n        title: 'App Design and Develop',\n        category: 'ANDROID',\n        state: 'Completed',\n        shortDesc: 'New common language will be more simple and regular than the existing European languages...',\n        question: 77,\n        comment: 875,\n        teamMembers: [\n            {\n                image: user6,\n                name: 'Mat Helme',\n            },\n            {\n                image: user7,\n                name: 'Michael Zenaty',\n            },\n            {\n                image: user8,\n                name: 'James Anderson',\n            },\n        ],\n        progress: 45,\n        variant: 'primary',\n    },\n    {\n        id: 3,\n        title: 'Landing page Design',\n        category: 'WEB DESIGN',\n        state: 'Completed',\n        shortDesc:\n            'It will be as simple as occidental in fact it will be to an english person it will seem like simplified English...',\n        question: 87,\n        comment: 125,\n        teamMembers: [\n            {\n                image: user9,\n                name: 'Mat Helme',\n            },\n            {\n                image: user10,\n                name: 'Michael Zenaty',\n            },\n            {\n                image: user1,\n                name: 'James Anderson',\n            },\n            {\n                image: user3,\n                name: 'Mat Helme',\n            },\n        ],\n        progress: 68,\n        variant: 'pink',\n    },\n    {\n        id: 4,\n        title: 'App Design and Develop',\n        category: 'ANDROID',\n        state: 'Completed',\n        shortDesc:\n            'Everyone realizes why a new common language would be desirable one could refuse to pay expensive translators...',\n        question: 77,\n        comment: 875,\n        teamMembers: [\n            {\n                image: user5,\n                name: 'Mat Helme',\n            },\n            {\n                image: user8,\n                name: 'Michael Zenaty',\n            },\n            {\n                image: user9,\n                name: 'James Anderson',\n            },\n        ],\n        progress: 45,\n        variant: 'purple',\n    },\n    {\n        id: 5,\n        title: 'Landing page Design',\n        category: 'WEB DESIGN',\n        state: 'Completed',\n        shortDesc: 'At vero eos et accusamus et iusto odio dignissimos ducimus qui blanditiis praesentium deleniti...',\n        question: 87,\n        comment: 125,\n        teamMembers: [\n            {\n                image: user3,\n                name: 'Mat Helme',\n            },\n            {\n                image: user4,\n                name: 'Michael Zenaty',\n            },\n            {\n                image: user5,\n                name: 'James Anderson',\n            },\n            {\n                image: user1,\n                name: 'Mat Helme',\n            },\n        ],\n        progress: 68,\n        variant: 'danger',\n    },\n    {\n        id: 6,\n        title: 'New Admin Design',\n        category: 'WEB DESIGN',\n        state: 'Completed',\n        shortDesc:\n            'Their separate existence is a myth. For science, music, sport, etc, Europe uses the same vocabulary....',\n        question: 56,\n        comment: 452,\n        teamMembers: [\n            {\n                image: user6,\n                name: 'Mat Helme',\n            },\n            {\n                image: user7,\n                name: 'Michael Zenaty',\n            },\n            {\n                image: user8,\n                name: 'James Anderson',\n            },\n        ],\n        progress: 80,\n        variant: 'warning',\n    },\n];\n","import { Link } from 'react-router-dom';\nimport { Badge, Card, Col, OverlayTrigger, ProgressBar, Row, Tooltip } from 'react-bootstrap';\nimport classNames from 'classnames';\n\n// hooks\nimport { usePageTitle } from '../../../hooks';\n\n// components\nimport { FormInput } from '../../../components/form';\n\n// types\nimport { ProjectsList } from './types';\n\n// dummy data\nimport { projects } from './data';\n\ntype SingleProjectProps = {\n    projects: ProjectsList[];\n};\n\nconst SingleProject = ({ projects }: SingleProjectProps) => {\n    return (\n        <Row>\n            {(projects || []).map((project, index) => {\n                return (\n                    <Col xl={4} key={index.toString()}>\n                        <Card>\n                            <Card.Body className=\"project-box\">\n                                <Badge bg={project.variant} className=\"float-end\">\n                                    {project.state}\n                                </Badge>\n                                <h4 className=\"mt-0\">\n                                    <Link to=\"#\" className=\"text-dark\">\n                                        {project.title}\n                                    </Link>\n                                </h4>\n                                <p className={classNames('text-' + project.variant, 'text-uppercase', 'font-13')}>\n                                    {project.category}\n                                </p>\n                                <p className=\"text-muted font-13\">\n                                    {project.shortDesc}\n                                    <Link to=\"#\" className=\"text-primary\">\n                                        View more\n                                    </Link>\n                                </p>\n\n                                <ul className=\"list-inline\">\n                                    <li className=\"list-inline-item me-4\">\n                                        <h4 className=\"mb-0\">{project.question}</h4>\n                                        <p className=\"text-muted\">Questions</p>\n                                    </li>\n                                    <li className=\"list-inline-item\">\n                                        <h4 className=\"mb-0\">{project.comment}</h4>\n                                        <p className=\"text-muted\">Comments</p>\n                                    </li>\n                                </ul>\n\n                                <div className=\"project-members mb-2\">\n                                    <h5 className=\"float-start me-3\">Team :</h5>\n                                    <div className=\"avatar-group\">\n                                        {(project.teamMembers || []).map((member, index) => {\n                                            return (\n                                                <OverlayTrigger\n                                                    key={index.toString()}\n                                                    placement=\"bottom\"\n                                                    overlay={<Tooltip id={member.name}>{member.name}</Tooltip>}\n                                                >\n                                                    <Link to=\"#\" className=\"avatar-group-item\">\n                                                        <img\n                                                            src={member.image}\n                                                            className=\"rounded-circle avatar-sm\"\n                                                            alt=\"\"\n                                                        />\n                                                    </Link>\n                                                </OverlayTrigger>\n                                            );\n                                        })}\n                                    </div>\n                                </div>\n\n                                <h5 className=\"mb-2 fw-semibold\">\n                                    Progress\n                                    <span className={classNames('float-end', 'text-' + project.variant)}>\n                                        {project.progress}%\n                                    </span>\n                                </h5>\n                                <ProgressBar\n                                    className={classNames('progress-bar-alt-' + project.variant, 'progress-sm')}\n                                >\n                                    <ProgressBar\n                                        variant={project.variant}\n                                        now={project.progress}\n                                        className=\"progress-animated\"\n                                    />\n                                </ProgressBar>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                );\n            })}\n        </Row>\n    );\n};\n\nconst Projects = () => {\n    // set pagetitle\n    usePageTitle({\n        title: 'Projects',\n        breadCrumbItems: [\n            {\n                path: 'apps/projects',\n                label: 'Apps',\n            },\n            {\n                path: 'apps/projects',\n                label: 'Projects',\n                active: true,\n            },\n        ],\n    });\n\n    return (\n        <>\n            <Row>\n                <Col sm={4}>\n                    <Link to=\"#\" className=\"btn btn-purple rounded-pill w-md waves-effect waves-light mb-3\">\n                        <i className=\"mdi mdi-plus me-1\"></i>\n                        Create Project\n                    </Link>\n                </Col>\n                <Col sm={8}>\n                    <div className=\"float-end\">\n                        <form className=\"row g-2 align-items-center mb-2 mb-sm-0\">\n                            <div className=\"col-auto\">\n                                <div className=\"d-flex\">\n                                    <label className=\"d-flex align-items-center\">\n                                        Phase\n                                        <FormInput\n                                            type=\"select\"\n                                            name=\"phase\"\n                                            containerClass=\"d-inline-block ms-2\"\n                                            className=\"form-select-sm\"\n                                        >\n                                            <option>All Projects(6)</option>\n                                            <option>completed</option>\n                                            <option>Progress</option>\n                                        </FormInput>\n                                    </label>\n                                </div>\n                            </div>\n                            <div className=\"col-auto\">\n                                <div className=\"d-flex\">\n                                    <label className=\"d-flex align-items-center\">\n                                        Sort\n                                        <FormInput\n                                            type=\"select\"\n                                            name=\"sort\"\n                                            containerClass=\"d-inline-block ms-2\"\n                                            className=\"form-select-sm\"\n                                        >\n                                            <option>Date</option>\n                                            <option>Name</option>\n                                            <option>End date</option>\n                                            <option>Start Date</option>\n                                        </FormInput>\n                                    </label>\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                </Col>\n            </Row>\n            <SingleProject projects={projects} />\n        </>\n    );\n};\n\nexport default Projects;\n"],"names":["_ref","defaultValues","resolver","children","onSubmit","formClass","methods","useForm","handleSubmit","register","control","formState","errors","_jsx","className","noValidate","Array","isArray","map","child","props","name","React","type","key","PasswordInput","_errors$name","placeholder","refCallback","otherProps","showPassword","setShowPassword","useState","_jsxs","_Fragment","InputGroup","Form","Control","id","as","ref","r","isInvalid","autoComplete","classNames","onClick","Feedback","TextualInput","_ref2","_errors$name2","endIcon","comp","rows","CheckInput","_ref3","_errors$name3","label","Check","SelectInput","_ref4","_errors$name4","Select","_ref5","labelClassName","containerClass","action","hasEndIcon","undefined","Group","Label","projects","title","category","state","shortDesc","question","comment","teamMembers","image","user1","user2","user3","user4","user5","progress","variant","user6","user7","user8","user9","SingleProject","Row","project","index","Col","xl","Card","Body","Badge","bg","Link","to","member","OverlayTrigger","placement","overlay","Tooltip","src","alt","toString","ProgressBar","now","Projects","usePageTitle","breadCrumbItems","path","active","sm","FormInput"],"sourceRoot":""}