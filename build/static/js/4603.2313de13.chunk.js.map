{"version":3,"file":"static/js/4603.2313de13.chunk.js","mappings":"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","sources":["pages/uikit/Modals/ModalSizes.tsx","pages/uikit/Modals/ModalWithPages.tsx","pages/uikit/Modals/ModalPositions.tsx","pages/uikit/Modals/ModalWithAlerts.tsx","pages/uikit/Modals/MultipleModal.tsx","pages/uikit/Modals/ToggleBetwenModals.tsx","pages/uikit/Modals/StaticBackDropModal.tsx","pages/uikit/Modals/CustomModals.tsx","pages/uikit/Modals/index.tsx"],"sourcesContent":["import { useState } from 'react';\nimport { Button, Card, Modal } from 'react-bootstrap';\n\nconst ModalSizes = () => {\n    const [standard, setStandard] = useState<boolean>(false);\n    const [modal, setModal] = useState<boolean>(false);\n    const [size, setSize] = useState<'sm' | 'lg' | 'xl'>();\n    const [className, setClassName] = useState<string>('');\n    const [scroll, setScroll] = useState<boolean>(false);\n\n    // Show/hide the modal\n    const toggleStandard = () => {\n        setStandard(!standard);\n    };\n\n    // Show/hide the modal\n    const toggle = () => {\n        setModal(!modal);\n    };\n\n    // Opens large modal\n    const openModalWithSize = (size: 'sm' | 'lg' | 'xl') => {\n        setSize(size);\n        setClassName('');\n        setScroll(false);\n        toggle();\n    };\n\n    // Opens modal with custom class\n    const openModalWithClass = (className: string) => {\n        setClassName(className);\n        setScroll(false);\n        toggle();\n    };\n\n    // Opens large modal\n    const openModalWithScroll = () => {\n        setScroll(true);\n        setSize('sm');\n        setClassName('');\n        toggle();\n    };\n\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">Bootstrap Modals</h4>\n                <p className=\"sub-header\">A rendered modal with header, body, and set of actions in the footer.</p>\n\n                <div className=\"button-list\">\n                    <Button onClick={toggleStandard}>Standard Modal</Button>\n                    <Button variant=\"info\" onClick={() => openModalWithSize('lg')}>\n                        Large Modal\n                    </Button>\n                    <Button variant=\"success\" onClick={() => openModalWithSize('sm')}>\n                        Small Modal\n                    </Button>\n                    <Button onClick={() => openModalWithClass('modal-full-width')}>Full width Modal</Button>\n                    <Button variant=\"secondary\" onClick={openModalWithScroll}>\n                        Scrollable Modal\n                    </Button>\n                </div>\n\n                {/* standard modal */}\n                <Modal show={standard} onHide={toggleStandard}>\n                    <Modal.Header onHide={toggleStandard} closeButton>\n                        <h4 className=\"modal-title\">Modal Heading</h4>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <h6>Text in a modal</h6>\n                        <p>Duis mollis, est non commodo luctus, nisi erat porttitor ligula.</p>\n                        <hr />\n                        <h6>Overflowing text to show scroll behavior</h6>\n                        <p>\n                            Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in,\n                            egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.\n                        </p>\n                        <p>\n                            Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis lacus\n                            vel augue laoreet rutrum faucibus dolor auctor.\n                        </p>\n                        <p>\n                            Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel\n                            scelerisque nisl consectetur et. Donec sed odio dui. Donec ullamcorper nulla non metus\n                            auctor fringilla.\n                        </p>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"light\" onClick={toggleStandard}>\n                            Close\n                        </Button>{' '}\n                        <Button onClick={toggleStandard}>Save changes</Button>\n                    </Modal.Footer>\n                </Modal>\n\n                <Modal show={modal} onHide={toggle} dialogClassName={className} size={size} scrollable={scroll}>\n                    <Modal.Header onHide={toggle} closeButton>\n                        <h4 className=\"modal-title\">Modal Heading</h4>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <h6>Text in a modal</h6>\n                        <p>Duis mollis, est non commodo luctus, nisi erat porttitor ligula.</p>\n                        <hr />\n                        <h6>Overflowing text to show scroll behavior</h6>\n                        <p>\n                            Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in,\n                            egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.\n                        </p>\n                        <p>\n                            Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis lacus\n                            vel augue laoreet rutrum faucibus dolor auctor.\n                        </p>\n                        <p>\n                            Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel\n                            scelerisque nisl consectetur et. Donec sed odio dui. Donec ullamcorper nulla non metus\n                            auctor fringilla.\n                        </p>\n                        {scroll && (\n                            <>\n                                <p>\n                                    Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac\n                                    facilisis in, egestas eget quam. Morbi leo risus, porta ac consectetur ac,\n                                    vestibulum at eros.\n                                </p>\n                                <p>\n                                    Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis\n                                    lacus vel augue laoreet rutrum faucibus dolor auctor.\n                                </p>\n                            </>\n                        )}\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"light\" onClick={toggle}>\n                            Close\n                        </Button>{' '}\n                        <Button onClick={toggle}>Save changes</Button>\n                    </Modal.Footer>\n                </Modal>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default ModalSizes;\n","import { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button, Card, Modal } from 'react-bootstrap';\n\n// images\nimport logodark from '../../../assets/images/logo-dark.png';\nimport logolight from '../../../assets/images/logo-light.png';\n\nconst ModalsWithPages = () => {\n    const [signUpModal, setSignUpModal] = useState<boolean>(false);\n    const [signInModal, setSignInModal] = useState<boolean>(false);\n\n    // Show/hide the modal\n    const toggleSignUp = () => {\n        setSignUpModal(!signUpModal);\n    };\n\n    const toggleSignIn = () => {\n        setSignInModal(!signInModal);\n    };\n\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">Modal with Pages</h4>\n\n                <p className=\"sub-header\">Examples of custom modals.</p>\n\n                <div className=\"button-list\">\n                    <Button onClick={toggleSignUp}>Sign Up Modal</Button>\n\n                    <Button variant=\"info\" onClick={toggleSignIn}>\n                        Log In Modal\n                    </Button>\n                </div>\n\n                {/* Sign up Modal */}\n                <Modal show={signUpModal} onHide={toggleSignUp}>\n                    <Modal.Body>\n                        <div className=\"text-center mt-2 mb-4\">\n                            <div className=\"auth-logo\">\n                                <Link to=\"/\" className=\"logo logo-dark\">\n                                    <span className=\"logo-lg\">\n                                        <img src={logodark} alt=\"\" height=\"24\" />\n                                    </span>\n                                </Link>\n\n                                <Link to=\"/\" className=\"logo logo-light\">\n                                    <span className=\"logo-lg\">\n                                        <img src={logolight} alt=\"\" height=\"24\" />\n                                    </span>\n                                </Link>\n                            </div>\n                        </div>\n                        <form className=\"ps-3 pe-3\">\n                            <div className=\"mb-3\">\n                                <label htmlFor=\"username\" className=\"form-label\">\n                                    Name\n                                </label>\n                                <input\n                                    className=\"form-control\"\n                                    type=\"email\"\n                                    id=\"username\"\n                                    required\n                                    placeholder=\"Michael Zenaty\"\n                                />\n                            </div>\n\n                            <div className=\"mb-3\">\n                                <label htmlFor=\"emailaddress\" className=\"form-label\">\n                                    Email address\n                                </label>\n                                <input\n                                    className=\"form-control\"\n                                    type=\"email\"\n                                    id=\"emailaddress\"\n                                    required\n                                    placeholder=\"john@deo.com\"\n                                />\n                            </div>\n\n                            <div className=\"mb-3\">\n                                <label htmlFor=\"password\" className=\"form-label\">\n                                    Password\n                                </label>\n                                <input\n                                    className=\"form-control\"\n                                    type=\"password\"\n                                    required\n                                    id=\"password\"\n                                    placeholder=\"Enter your password\"\n                                />\n                            </div>\n\n                            <div className=\"mb-3\">\n                                <div className=\"form-check\">\n                                    <input type=\"checkbox\" className=\"form-check-input\" id=\"customCheck1\" />\n                                    <label className=\"form-check-label\" htmlFor=\"customCheck1\">\n                                        I accept <Link to=\"#\">Terms and Conditions</Link>\n                                    </label>\n                                </div>\n                            </div>\n\n                            <div className=\"mb-3 text-center\">\n                                <button className=\"btn btn-primary\" type=\"submit\">\n                                    Sign Up Free\n                                </button>\n                            </div>\n                        </form>\n                    </Modal.Body>\n                </Modal>\n\n                {/* Sign in Modal */}\n                <Modal show={signInModal} onHide={toggleSignIn}>\n                    <Modal.Body>\n                        <div className=\"text-center mt-2 mb-4\">\n                            <div className=\"auth-logo\">\n                                <Link to=\"/\" className=\"logo logo-dark\">\n                                    <span className=\"logo-lg\">\n                                        <img src={logodark} alt=\"\" height=\"24\" />\n                                    </span>\n                                </Link>\n\n                                <Link to=\"/\" className=\"logo logo-light\">\n                                    <span className=\"logo-lg\">\n                                        <img src={logolight} alt=\"\" height=\"24\" />\n                                    </span>\n                                </Link>\n                            </div>\n                        </div>\n                        <form className=\"ps-3 pe-3\">\n                            <div className=\"mb-3\">\n                                <label htmlFor=\"emailaddress\" className=\"form-label\">\n                                    Email address\n                                </label>\n                                <input\n                                    className=\"form-control\"\n                                    type=\"email\"\n                                    id=\"emailaddress\"\n                                    required\n                                    placeholder=\"john@deo.com\"\n                                />\n                            </div>\n\n                            <div className=\"mb-3\">\n                                <label htmlFor=\"password\" className=\"form-label\">\n                                    Password\n                                </label>\n                                <input\n                                    className=\"form-control\"\n                                    type=\"password\"\n                                    required\n                                    id=\"password\"\n                                    placeholder=\"Enter your password\"\n                                />\n                            </div>\n\n                            <div className=\"mb-3\">\n                                <div className=\"form-check\">\n                                    <input type=\"checkbox\" className=\"form-check-input\" id=\"customCheck1\" />\n                                    <label className=\"form-check-label\" htmlFor=\"customCheck1\">\n                                        Remember me\n                                    </label>\n                                </div>\n                            </div>\n\n                            <div className=\"mb-3 text-center\">\n                                <button className=\"btn rounded-pill btn-primary\" type=\"submit\">\n                                    Sign In\n                                </button>\n                            </div>\n                        </form>\n                    </Modal.Body>\n                </Modal>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default ModalsWithPages;\n","import { useState } from 'react';\nimport { Button, Card, Modal } from 'react-bootstrap';\n\nconst ModalPositions = () => {\n    const [modal, setModal] = useState<boolean>(false);\n    const [className, setClassName] = useState<string>('');\n\n    // Show/hide the modal\n    const toggle = () => {\n        setModal(!modal);\n    };\n\n    // Opens modal with custom class\n    const openModalWithClass = (className: string) => {\n        setClassName(className);\n        toggle();\n    };\n\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">Modal Position</h4>\n\n                <p className=\"sub-header\">\n                    Specify the position for the modal. You can display modal at top, bottom, center or right of page by\n                    specifying classes <code>modal-top</code>, <code>modal-bottom</code>,{' '}\n                    <code>modal-dialog-centered</code> and <code>modal-right</code>\n                    respectively.\n                </p>\n\n                <div className=\"button-list\">\n                    <Button variant=\"secondary\" onClick={() => openModalWithClass('modal-top')}>\n                        Top Modal\n                    </Button>\n                    <Button variant=\"secondary\" onClick={() => openModalWithClass('modal-bottom')}>\n                        Bottom Modal\n                    </Button>\n                    <Button variant=\"secondary\" onClick={() => openModalWithClass('modal-dialog-centered')}>\n                        Center Modal\n                    </Button>\n                    <Button variant=\"secondary\" onClick={() => openModalWithClass('modal-right')}>\n                        Rightbar Modal\n                    </Button>\n                </div>\n\n                <Modal show={modal} onHide={toggle} dialogClassName={className}>\n                    <Modal.Header onHide={toggle} closeButton>\n                        <h4 className=\"modal-title\">Modal Heading</h4>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <h5>Text in a modal</h5>\n                        <p>Duis mollis, est non commodo luctus, nisi erat porttitor ligula.</p>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button onClick={toggle}>Save changes</Button>\n                    </Modal.Footer>\n                </Modal>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default ModalPositions;\n","import { useState } from 'react';\nimport { Button, Card, Modal } from 'react-bootstrap';\nimport classNames from 'classnames';\n\nconst ModalWithAlerts = () => {\n    const [fillModal, setFillModal] = useState<boolean>(false);\n    const [modal, setModal] = useState<boolean>(false);\n\n    const [className, setClassName] = useState<string>('');\n\n    // Show/hide the modal\n    const fillToggle = () => {\n        setFillModal(!fillModal);\n    };\n\n    const toggle = () => {\n        setModal(!modal);\n    };\n\n    // Opens modal with custom fill class\n    const openModalWithFillClass = (className: string) => {\n        setClassName(className);\n        fillToggle();\n    };\n\n    // Opens modal with custom class\n    const openModalWithClass = (className: string) => {\n        setClassName(className);\n        toggle();\n    };\n\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">Modal based Alerts</h4>\n\n                <p className=\"sub-header\">Show different contexual alert messages using modal component.</p>\n\n                <div className=\"button-list\">\n                    <Button variant=\"success\" className=\"me-1\" onClick={() => openModalWithFillClass('success')}>\n                        Success Alert\n                    </Button>\n                    <Button variant=\"info\" className=\"me-1\" onClick={() => openModalWithClass('info')}>\n                        Info Alert\n                    </Button>\n                    <Button variant=\"warning\" className=\"me-1\" onClick={() => openModalWithClass('warning')}>\n                        Warning Alert\n                    </Button>\n                    <Button variant=\"danger\" className=\"me-1\" onClick={() => openModalWithFillClass('danger')}>\n                        Danger Alert\n                    </Button>\n                </div>\n\n                <Modal show={fillModal} onHide={fillToggle} size=\"sm\">\n                    <div className={classNames('modal-filled', 'bg-' + className)}>\n                        <Modal.Body className=\"p-4\">\n                            <div className=\"text-center\">\n                                <i className=\"dripicons-checkmark h1 text-white\"></i>\n                                <h4 className=\"mt-2 text-white\">Well Done!</h4>\n                                <p className=\"mt-3 text-white\">\n                                    Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac\n                                    facilisis in, egestas eget quam.\n                                </p>\n                                <Button onClick={fillToggle} className=\"btn-light my-2\">\n                                    Continue\n                                </Button>\n                            </div>\n                        </Modal.Body>\n                    </div>\n                </Modal>\n\n                <Modal show={modal} onHide={toggle} size=\"sm\">\n                    <div>\n                        <Modal.Body className=\"p-4\">\n                            <div className=\"text-center\">\n                                <i className={classNames('dripicons-information', 'h1', 'text-' + className)}></i>\n                                <h4 className=\"mt-2\">Heads up!</h4>\n                                <p className=\"mt-3\">\n                                    Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac\n                                    facilisis in, egestas eget quam.\n                                </p>\n                                <Button onClick={toggle} className={classNames('my-2', 'btn-' + className)}>\n                                    Continue\n                                </Button>\n                            </div>\n                        </Modal.Body>\n                    </div>\n                </Modal>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default ModalWithAlerts;\n","import { useState } from 'react';\nimport { Button, Card, Modal } from 'react-bootstrap';\n\nconst MultipleModal = () => {\n    const [modal, setModal] = useState<boolean>(false);\n    const [nextModal, setNextModal] = useState<boolean>(false);\n\n    // Show/hide the modal\n    const toggle = () => {\n        setModal(!modal);\n    };\n\n    const toggleNextModal = () => {\n        toggle();\n        setNextModal(!nextModal);\n    };\n\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">Multiple Modal</h4>\n\n                <p className=\"sub-header\">\n                    Display a series of modals one by one to guide your users on multiple aspects or take step wise\n                    input.\n                </p>\n\n                <div className=\"button-list\">\n                    <Button variant=\"secondary\" onClick={toggle}>\n                        Multiple Modal\n                    </Button>\n                </div>\n\n                <Modal show={modal} onHide={toggle}>\n                    <Modal.Header closeButton>\n                        <h4 className=\"modal-title\">Modal Heading</h4>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <h5>Text in a modal</h5>\n                        <p>Duis mollis, est non commodo luctus, nisi erat porttitor ligula.</p>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button onClick={() => setNextModal(true)}>Next</Button>\n                    </Modal.Footer>\n                </Modal>\n\n                <Modal show={nextModal} onHide={toggleNextModal}>\n                    <Modal.Header closeButton>\n                        <h4 className=\"modal-title\">Modal Heading</h4>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <h5>Text in a modal</h5>\n                        <p>Duis mollis, est non commodo luctus, nisi erat porttitor ligula.</p>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button onClick={toggleNextModal}>Close</Button>\n                    </Modal.Footer>\n                </Modal>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default MultipleModal;\n","import { useState } from 'react';\nimport { Button, Card, Modal } from 'react-bootstrap';\n\nconst ToggleBetweenModals = () => {\n    const [modal, setModal] = useState<boolean>(false);\n    const [nextModal, setNextModal] = useState<boolean>(false);\n\n    // Show/hide the modal\n    const toggle = () => {\n        setModal(!modal);\n    };\n\n    const toggleNextModal = () => {\n        toggle();\n        setNextModal(!nextModal);\n    };\n\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">Toggle Between Modals</h4>\n                <p className=\"sub-header\">\n                    Display a series of modals one by one to guide your users on multiple aspects or take step wise\n                    input.\n                </p>\n\n                <div className=\"button-list\">\n                    <Button variant=\"info\" onClick={toggle}>\n                        Open first modal\n                    </Button>\n                </div>\n\n                <Modal show={modal} onHide={toggle} centered>\n                    <Modal.Header closeButton>\n                        <h4 className=\"modal-title\">Modal Heading</h4>\n                    </Modal.Header>\n                    <Modal.Body>Show a second modal and hide this one with the button below.</Modal.Body>\n                    <Modal.Footer>\n                        <Button onClick={toggleNextModal}>Open second modal</Button>\n                    </Modal.Footer>\n                </Modal>\n\n                <Modal show={nextModal} onHide={toggleNextModal} centered>\n                    <Modal.Header closeButton>\n                        <h4 className=\"modal-title\">Modal Heading</h4>\n                    </Modal.Header>\n                    <Modal.Body>Hide this modal and show the first with the button below.</Modal.Body>\n                    <Modal.Footer>\n                        <Button onClick={toggleNextModal}>Back to first</Button>\n                    </Modal.Footer>\n                </Modal>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default ToggleBetweenModals;\n","import { useState } from 'react';\nimport { Button, Card, Modal } from 'react-bootstrap';\n\nconst StaticBackdropModal = () => {\n    const [modal, setModal] = useState<boolean>(false);\n\n    // Show/hide the modal\n    const toggle = () => {\n        setModal(!modal);\n    };\n\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">Static Backdrop</h4>\n\n                <p className=\"sub-header\">\n                    When backdrop is set to static, the modal will not close when clicking outside it. Click the button\n                    below to try it.\n                </p>\n\n                <div className=\"button-list\">\n                    <Button variant=\"info\" onClick={toggle}>\n                        Launch static backdrop modal\n                    </Button>\n                </div>\n\n                <Modal show={modal} onHide={toggle} backdrop=\"static\" keyboard={false}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Modal title</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry richardson ad squid.\n                        3 wolf moon officia aute, non cupidatat skateboard dolor brunch. Food truck quinoa nesciunt\n                        laborum eiusmod. Brunch 3 wolf moon tempor, sunt aliqua put a bird on it squid single-origin\n                        coffee nulla assumenda shoreditch et.\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={toggle}>\n                            Close\n                        </Button>\n                        <Button variant=\"primary\">Understood</Button>\n                    </Modal.Footer>\n                </Modal>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default StaticBackdropModal;\n","import { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Accordion, Button, Card, Modal, useAccordionButton } from 'react-bootstrap';\n\nconst CustomToggle = ({ children, eventKey }: { children: any; eventKey: string }) => {\n    const decoratedOnClick = useAccordionButton(eventKey, () => {});\n\n    return (\n        <h5 className=\"m-0\">\n            <Link to=\"#\" className=\"text-dark\" onClick={decoratedOnClick}>\n                {children}\n            </Link>\n        </h5>\n    );\n};\n\nconst CustomModals = () => {\n    const [responsiveModal, setResponsiveModal] = useState<boolean>(false);\n    const [accordionModal, setAccordionModal] = useState<boolean>(false);\n\n    // Show/hide the modal\n    const toggleResponsiveModal = () => {\n        setResponsiveModal(!responsiveModal);\n    };\n\n    const toggleAccordionModal = () => {\n        setAccordionModal(!accordionModal);\n    };\n\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">Custom Modals</h4>\n\n                <p className=\"sub-header\">Examples of custom modals.</p>\n\n                <div className=\"button-list\">\n                    <Button variant=\"success\" className=\"waves-effect waves-light\" onClick={toggleResponsiveModal}>\n                        Responsive Modal\n                    </Button>\n                    <Button variant=\"secondary\" className=\"waves-effect waves-light\" onClick={toggleAccordionModal}>\n                        Accordion in Modal\n                    </Button>\n                </div>\n\n                <Modal show={responsiveModal} onHide={toggleResponsiveModal}>\n                    <Modal.Header closeButton>\n                        <h4 className=\"modal-title\">Modal Content is Responsive</h4>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <div className=\"row\">\n                            <div className=\"col-md-6\">\n                                <div className=\"mb-3\">\n                                    <label htmlFor=\"field-1\" className=\"form-label\">\n                                        Name\n                                    </label>\n                                    <input\n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        id=\"field-1\"\n                                        placeholder=\"John\"\n                                        required\n                                    />\n                                </div>\n                            </div>\n                            <div className=\"col-md-6\">\n                                <div className=\"mb-3\">\n                                    <label htmlFor=\"field-2\" className=\"form-label\">\n                                        Surname\n                                    </label>\n                                    <input\n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        id=\"field-2\"\n                                        placeholder=\"Doe\"\n                                        required\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col-md-12\">\n                                <div className=\"mb-3\">\n                                    <label htmlFor=\"field-3\" className=\"form-label\">\n                                        Address\n                                    </label>\n                                    <input\n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        id=\"field-3\"\n                                        placeholder=\"Address\"\n                                        required\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col-md-4\">\n                                <div className=\"mb-3\">\n                                    <label htmlFor=\"field-4\" className=\"form-label\">\n                                        City\n                                    </label>\n                                    <input\n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        id=\"field-4\"\n                                        placeholder=\"Boston\"\n                                        required\n                                    />\n                                </div>\n                            </div>\n                            <div className=\"col-md-4\">\n                                <div className=\"mb-3\">\n                                    <label htmlFor=\"field-5\" className=\"form-label\">\n                                        Country\n                                    </label>\n                                    <input\n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        id=\"field-5\"\n                                        placeholder=\"United States\"\n                                        required\n                                    />\n                                </div>\n                            </div>\n                            <div className=\"col-md-4\">\n                                <div className=\"mb-3\">\n                                    <label htmlFor=\"field-6\" className=\"form-label\">\n                                        Zip\n                                    </label>\n                                    <input\n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        id=\"field-6\"\n                                        placeholder=\"123456\"\n                                        required\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col-md-12\">\n                                <div className=\"\">\n                                    <label htmlFor=\"field-7\" className=\"form-label\">\n                                        Personal Info\n                                    </label>\n                                    <textarea\n                                        className=\"form-control\"\n                                        id=\"field-7\"\n                                        placeholder=\"Write something about yourself\"\n                                        required\n                                    ></textarea>\n                                </div>\n                            </div>\n                        </div>\n                    </Modal.Body>\n\n                    <Modal.Footer>\n                        <button\n                            type=\"button\"\n                            className=\"btn btn-secondary waves-effect\"\n                            onClick={toggleResponsiveModal}\n                        >\n                            Close\n                        </button>\n                        <button type=\"submit\" className=\"btn btn-info waves-effect waves-light\">\n                            Save changes\n                        </button>\n                    </Modal.Footer>\n                </Modal>\n\n                <Modal show={accordionModal} onHide={toggleAccordionModal}>\n                    <Accordion defaultActiveKey=\"0\">\n                        <Card className=\"mb-0\">\n                            <Card.Header>\n                                <CustomToggle eventKey=\"0\">Collapsible Group Item #1</CustomToggle>\n                            </Card.Header>\n                            <Accordion.Collapse eventKey=\"0\">\n                                <Card.Body>\n                                    Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry\n                                    richardson ad squid. 3 wolf moon officia aute, non cupidatat skateboard dolor\n                                    brunch. Food truck quinoa nesciunt laborum eiusmod. Brunch 3 wolf moon tempor, sunt\n                                    aliqua put a bird on it squid single-origin coffee nulla assumenda shoreditch et.\n                                    Nihil anim keffiyeh helvetica, craft beer labore wes anderson cred nesciunt sapiente\n                                    ea proident. Ad vegan excepteur butcher vice lomo. Leggings occaecat craft beer\n                                    farm-to-table, raw denim aesthetic synth nesciunt you probably haven't heard of them\n                                    accusamus labore sustainable VHS.\n                                </Card.Body>\n                            </Accordion.Collapse>\n                        </Card>\n                        <Card className=\"mb-0\">\n                            <Card.Header>\n                                <CustomToggle eventKey=\"1\">Collapsible Group Item #2</CustomToggle>\n                            </Card.Header>\n                            <Accordion.Collapse eventKey=\"1\">\n                                <Card.Body>\n                                    Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry\n                                    richardson ad squid. 3 wolf moon officia aute, non cupidatat skateboard dolor\n                                    brunch. Food truck quinoa nesciunt laborum eiusmod. Brunch 3 wolf moon tempor, sunt\n                                    aliqua put a bird on it squid single-origin coffee nulla assumenda shoreditch et.\n                                    Nihil anim keffiyeh helvetica, craft beer labore wes anderson cred nesciunt sapiente\n                                    ea proident. Ad vegan excepteur butcher vice lomo. Leggings occaecat craft beer\n                                    farm-to-table, raw denim aesthetic synth nesciunt you probably haven't heard of them\n                                    accusamus labore sustainable VHS.\n                                </Card.Body>\n                            </Accordion.Collapse>\n                        </Card>\n                        <Card className=\"mb-0\">\n                            <Card.Header>\n                                <CustomToggle eventKey=\"2\">Collapsible Group Item #3</CustomToggle>\n                            </Card.Header>\n                            <Accordion.Collapse eventKey=\"2\">\n                                <Card.Body>\n                                    Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry\n                                    richardson ad squid. 3 wolf moon officia aute, non cupidatat skateboard dolor\n                                    brunch. Food truck quinoa nesciunt laborum eiusmod. Brunch 3 wolf moon tempor, sunt\n                                    aliqua put a bird on it squid single-origin coffee nulla assumenda shoreditch et.\n                                    Nihil anim keffiyeh helvetica, craft beer labore wes anderson cred nesciunt sapiente\n                                    ea proident. Ad vegan excepteur butcher vice lomo. Leggings occaecat craft beer\n                                    farm-to-table, raw denim aesthetic synth nesciunt you probably haven't heard of them\n                                    accusamus labore sustainable VHS.\n                                </Card.Body>\n                            </Accordion.Collapse>\n                        </Card>\n                    </Accordion>\n                </Modal>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default CustomModals;\n","import { Col, Row } from 'react-bootstrap';\n\n// hooks\nimport { usePageTitle } from '../../../hooks';\n\n// components\nimport ModalSizes from './ModalSizes';\nimport ModalsWithPages from './ModalWithPages';\nimport ModalPositions from './ModalPositions';\nimport ModalWithAlerts from './ModalWithAlerts';\nimport MultipleModal from './MultipleModal';\nimport ToggleBetweenModals from './ToggleBetwenModals';\nimport StaticBackdropModal from './StaticBackDropModal';\nimport CustomModals from './CustomModals';\n\nconst Modals = () => {\n    // set pagetitle\n    usePageTitle({\n        title: 'Modals',\n        breadCrumbItems: [\n            {\n                path: '/base-ui/modals',\n                label: 'Base UI',\n            },\n            {\n                path: '/base-ui/modals',\n                label: 'Modals',\n                active: true,\n            },\n        ],\n    });\n\n    return (\n        <>\n            <Row>\n                <Col md={6}>\n                    <ModalSizes />\n                </Col>\n                <Col md={6}>\n                    <ModalsWithPages />\n                </Col>\n            </Row>\n            <Row>\n                <Col md={6}>\n                    <ModalPositions />\n                </Col>\n                <Col md={6}>\n                    <ModalWithAlerts />\n                </Col>\n            </Row>\n            <Row>\n                <Col md={6}>\n                    <MultipleModal />\n                </Col>\n                <Col md={6}>\n                    <ToggleBetweenModals />\n                </Col>\n            </Row>\n            <Row>\n                <Col md={6}>\n                    <StaticBackdropModal />\n                </Col>\n                <Col md={6}>\n                    <CustomModals />\n                </Col>\n            </Row>\n        </>\n    );\n};\n\nexport default Modals;\n"],"names":["ModalSizes","standard","setStandard","useState","modal","setModal","size","setSize","className","setClassName","scroll","setScroll","toggleStandard","toggle","openModalWithSize","_jsx","Card","children","_jsxs","Body","Button","onClick","variant","openModalWithClass","openModalWithScroll","Modal","show","onHide","Header","closeButton","Footer","dialogClassName","scrollable","_Fragment","ModalsWithPages","signUpModal","setSignUpModal","signInModal","setSignInModal","toggleSignUp","toggleSignIn","Link","to","src","logodark","alt","height","logolight","htmlFor","type","id","required","placeholder","ModalPositions","ModalWithAlerts","fillModal","setFillModal","fillToggle","openModalWithFillClass","classNames","MultipleModal","nextModal","setNextModal","toggleNextModal","ToggleBetweenModals","centered","StaticBackdropModal","backdrop","keyboard","Title","CustomToggle","_ref","eventKey","decoratedOnClick","useAccordionButton","CustomModals","responsiveModal","setResponsiveModal","accordionModal","setAccordionModal","toggleResponsiveModal","toggleAccordionModal","Accordion","defaultActiveKey","Collapse","Modals","usePageTitle","title","breadCrumbItems","path","label","active","Row","Col","md"],"sourceRoot":""}