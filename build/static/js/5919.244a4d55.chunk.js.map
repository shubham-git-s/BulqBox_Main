{"version":3,"file":"static/js/5919.244a4d55.chunk.js","mappings":"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","sources":["components/Datepicker.tsx","pages/forms/Advanced.tsx"],"sourcesContent":["import React, { forwardRef } from 'react';\nimport DatePicker from 'react-datepicker';\nimport classNames from 'classnames';\n\ntype DatepickerInputProps = {\n    onClick?: () => void;\n    value?: string;\n    inputClass: string;\n    children?: React.ReactNode;\n};\n\n/* Datepicker with Input */\nconst DatepickerInput = forwardRef<HTMLInputElement, DatepickerInputProps>((props, ref) => {\n    const onDateValueChange = () => {\n        console.log('date value changed');\n    };\n    return (\n        <input\n            type=\"text\"\n            className={classNames('form-control', props.inputClass)}\n            onClick={props.onClick}\n            value={props.value}\n            onChange={onDateValueChange}\n            ref={ref}\n        />\n    );\n});\n\n/* Datepicker with Addon Input */\nconst DatepickerInputWithAddon = forwardRef<HTMLInputElement, DatepickerInputProps>((props, ref) => (\n    <div className=\"input-group position-relative\" ref={ref}>\n        <input\n            type=\"text\"\n            className={classNames('form-control', props.inputClass)}\n            onClick={props.onClick}\n            value={props.value}\n            readOnly\n        />\n        <span className=\"input-group-text\">\n            <i className=\"ri-calendar-event-fill\"></i>\n        </span>\n    </div>\n));\n\ntype AdmintoDatepickerProps = {\n    value?: Date;\n    selectsRange?: boolean;\n    startDate?: Date;\n    endDate?: Date;\n    calendarClassName?: string;\n    onChange: (date: any) => void;\n    hideAddon?: boolean;\n    inputClass?: string;\n    dateFormat?: string;\n    minDate?: Date;\n    maxDate?: Date;\n    showTimeSelect?: boolean;\n    tI?: number;\n    timeCaption?: string;\n    timeFormat?: string;\n    showTimeSelectOnly?: boolean;\n    monthsShown?: number;\n    inline?: boolean;\n};\n\nconst AdmintoDatepicker = (props: AdmintoDatepickerProps) => {\n    // handle custom input\n    const input =\n        (props.hideAddon || false) === true ? (\n            <DatepickerInput inputClass={props.inputClass!} />\n        ) : (\n            <DatepickerInputWithAddon inputClass={props.inputClass!} />\n        );\n\n    return (\n        <>\n            {/* date picker control */}\n            <DatePicker\n                calendarClassName={props.calendarClassName || 'shadow'}\n                selectsRange={props.selectsRange}\n                startDate={props.startDate}\n                endDate={props.endDate}\n                selected={props.value}\n                onChange={(date) => props.onChange(date)}\n                customInput={input}\n                timeIntervals={props.tI}\n                showTimeSelect={props.showTimeSelect}\n                timeFormat={props.timeFormat || 'hh:mm a'}\n                timeCaption={props.timeCaption}\n                dateFormat={props.dateFormat || 'MM/dd/yyyy'}\n                minDate={props.minDate}\n                maxDate={props.maxDate}\n                monthsShown={props.monthsShown}\n                showTimeSelectOnly={props.showTimeSelectOnly}\n                inline={props.inline}\n                autoComplete=\"off\"\n            />\n        </>\n    );\n};\n\nexport default AdmintoDatepicker;\n","import { useState } from 'react';\nimport { Row, Col, Card } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport Select from 'react-select';\nimport { Typeahead } from 'react-bootstrap-typeahead';\nimport MaskedInput from 'react-text-mask';\n\n// hooks\nimport { usePageTitle } from '../../hooks';\n\n// components\nimport AdmintoDatepicker from '../../components/Datepicker';\n\ntype Option = string | Record<string, any>;\n\nconst ReactSelect = () => {\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">\n                    <Link rel=\"noreferrer\" to=\"https://github.com/JedWatson/react-select\" target=\"_blank\">\n                        React select\n                    </Link>\n                </h4>\n                <p className=\"mb-1 mt-3 fw-bold text-muted\">Single Selection</p>\n                <p className=\"text-muted font-14\">React-Select based Select element</p>\n                <Select\n                    className=\"react-select react-select-container\"\n                    classNamePrefix=\"react-select\"\n                    options={[\n                        { value: 'chocolate', label: 'Chocolate' },\n                        { value: 'strawberry', label: 'Strawberry' },\n                        { value: 'vanilla', label: 'Vanilla' },\n                    ]}\n                ></Select>\n\n                <p className=\"mb-1 mt-3 fw-bold text-muted\">Multiple Selection</p>\n                <p className=\"text-muted font-14\">React-Select based Select (Multiple) element</p>\n                <Select\n                    isMulti={true}\n                    options={[\n                        { value: 'chocolate', label: 'Chocolate' },\n                        { value: 'strawberry', label: 'Strawberry' },\n                        { value: 'vanilla', label: 'Vanilla' },\n                    ]}\n                    className=\"react-select react-select-container\"\n                    classNamePrefix=\"react-select\"\n                ></Select>\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst Typeaheads = () => {\n    const [singleSelections, setSingleSelections] = useState<Option[]>([]);\n    const [multiSelections, setMultiSelections] = useState<Option[]>([]);\n\n    const options: Array<Option> = [\n        { id: 1, value: 'chocolate', label: 'Chocolate' },\n        { id: 2, value: 'strawberry', label: 'Strawberry' },\n        { id: 3, value: 'vanilla', label: 'Vanilla' },\n    ];\n\n    const onChangeSingleSelection = (selected: Option[]) => {\n        setSingleSelections(selected);\n    };\n\n    const onChangeMultipleSelection = (selected: Option[]) => {\n        setMultiSelections(selected);\n    };\n\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">\n                    <a rel=\"noreferrer\" href=\"http://ericgio.github.io/react-bootstrap-typeahead/\" target=\"_blank\">\n                        Typeahead\n                    </a>\n                </h4>\n                <p className=\"mb-1 mt-3 fw-bold text-muted\">Single Selection</p>\n                <p className=\"text-muted font-14\">Typeahead based Select element</p>\n                <Typeahead\n                    id=\"select2\"\n                    labelKey={'label'}\n                    multiple={false}\n                    onChange={onChangeSingleSelection}\n                    options={options}\n                    placeholder=\"Choose a state...\"\n                    selected={singleSelections}\n                />\n\n                <p className=\"mb-1 mt-3 fw-bold text-muted\">Multiple Selection</p>\n                <p className=\"text-muted font-14\">Typeahead based Select (Multiple) element</p>\n                <Typeahead\n                    id=\"select3\"\n                    labelKey=\"label\"\n                    multiple\n                    onChange={onChangeMultipleSelection}\n                    options={options}\n                    placeholder=\"Choose a state...\"\n                    selected={multiSelections}\n                />\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst DatePickers = () => {\n    const [selectedDate, setSelectedDate] = useState<Date>(new Date());\n\n    /*\n     * handle date change\n     */\n    const onDateChange = (date: Date) => {\n        if (date) {\n            setSelectedDate(date);\n        }\n    };\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">Date &amp; Time Picker</h4>\n                <p className=\"text-muted font-14\">\n                    A simple date picker using <Link to=\"https://reactdatepicker.com/\">ReactJS Datepicker</Link>\n                </p>\n\n                <Row>\n                    <Col lg={6}>\n                        <div className=\"mb-3\">\n                            <label className=\"form-label\">Single Date</label> <br />\n                            <AdmintoDatepicker\n                                hideAddon={true}\n                                value={selectedDate}\n                                onChange={(date: Date) => {\n                                    onDateChange(date);\n                                }}\n                            />\n                        </div>\n                    </Col>\n                    <Col lg={6}>\n                        <div className=\"mb-3\">\n                            <label className=\"form-label\">Single Date with multiple months</label> <br />\n                            <AdmintoDatepicker\n                                hideAddon={true}\n                                monthsShown={2}\n                                value={selectedDate}\n                                onChange={(date: Date) => {\n                                    onDateChange(date);\n                                }}\n                            />\n                        </div>\n                    </Col>\n                </Row>\n\n                <Row>\n                    <Col lg={6}>\n                        <div className=\"mb-3\">\n                            <label className=\"form-label\">Custom date format</label> <br />\n                            <AdmintoDatepicker\n                                hideAddon={true}\n                                dateFormat=\"yyyy-MM-dd\"\n                                value={selectedDate}\n                                onChange={(date: Date) => {\n                                    onDateChange(date);\n                                }}\n                            />\n                        </div>\n                    </Col>\n                    <Col lg={6}>\n                        <div className=\"mb-3\">\n                            <label className=\"form-label\">Specific date range</label> <br />\n                            <AdmintoDatepicker\n                                hideAddon={true}\n                                minDate={new Date()}\n                                maxDate={new Date(new Date().setDate(new Date().getDate() + 7))}\n                                value={selectedDate}\n                                onChange={(date: Date) => {\n                                    onDateChange(date);\n                                }}\n                            />\n                        </div>\n                    </Col>\n                </Row>\n\n                <Row>\n                    <Col lg={6}>\n                        <div className=\"mb-3\">\n                            <label className=\"form-label\">Select Time</label> <br />\n                            <AdmintoDatepicker\n                                hideAddon={true}\n                                showTimeSelect\n                                timeFormat=\"HH:mm\"\n                                tI={60}\n                                dateFormat=\"MMMM d, yyyy h:mm aa\"\n                                timeCaption=\"time\"\n                                value={selectedDate}\n                                onChange={(date: Date) => {\n                                    onDateChange(date);\n                                }}\n                            />\n                        </div>\n                    </Col>\n                    <Col lg={6}>\n                        <div className=\"mb-3\">\n                            <label className=\"form-label\">Time only</label> <br />\n                            <AdmintoDatepicker\n                                hideAddon={true}\n                                showTimeSelect\n                                showTimeSelectOnly\n                                tI={60}\n                                dateFormat=\"h:mm aa\"\n                                timeCaption=\"Time\"\n                                value={selectedDate}\n                                onChange={(date: Date) => {\n                                    onDateChange(date);\n                                }}\n                            />\n                        </div>\n                    </Col>\n                </Row>\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst InputMasks = () => {\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">Input Masks</h4>\n                <p className=\"text-muted font-14\">\n                    Input masks by{' '}\n                    <Link to=\"https://github.com/text-mask/text-mask/tree/master/react#readme\">react-text-mask</Link>\n                </p>\n\n                <Row>\n                    <Col lg={6}>\n                        <div className=\"mb-3\">\n                            <label className=\"form-label\">Phone Number with Area Code</label> <br />\n                            <MaskedInput\n                                mask={[\n                                    '(',\n                                    /[1-9]/,\n                                    /\\d/,\n                                    ')',\n                                    ' ',\n                                    /\\d/,\n                                    /\\d/,\n                                    /\\d/,\n                                    /\\d/,\n                                    '-',\n                                    /\\d/,\n                                    /\\d/,\n                                    /\\d/,\n                                    /\\d/,\n                                ]}\n                                placeholder=\"(__) ____-____\"\n                                className=\"form-control\"\n                            />\n                        </div>\n                    </Col>\n                    <Col lg={6}>\n                        <div className=\"mb-3\">\n                            <label className=\"form-label\">US Phone Number</label> <br />\n                            <MaskedInput\n                                mask={[\n                                    '(',\n                                    /[1-9]/,\n                                    /\\d/,\n                                    /\\d/,\n                                    ')',\n                                    ' ',\n                                    /\\d/,\n                                    /\\d/,\n                                    /\\d/,\n                                    '-',\n                                    /\\d/,\n                                    /\\d/,\n                                    /\\d/,\n                                    /\\d/,\n                                ]}\n                                placeholder=\"(___) ___-____\"\n                                className=\"form-control\"\n                            />\n                        </div>\n                    </Col>\n                </Row>\n\n                <Row>\n                    <Col lg={6}>\n                        <div className=\"mb-3\">\n                            <label className=\"form-label\">Date</label> <br />\n                            <MaskedInput\n                                mask={[/\\d/, /\\d/, '/', /\\d/, /\\d/, '/', /\\d/, /\\d/, /\\d/, /\\d/]}\n                                placeholder=\"__/__/____\"\n                                className=\"form-control\"\n                            />\n                        </div>\n                    </Col>\n                    <Col lg={6}>\n                        <div className=\"mb-3\">\n                            <label className=\"form-label\">Time</label> <br />\n                            <MaskedInput\n                                mask={[/\\d/, /\\d/, ':', /\\d/, /\\d/, ':', /\\d/, /\\d/]}\n                                placeholder=\"__:__:__\"\n                                className=\"form-control\"\n                            />\n                        </div>\n                    </Col>\n                </Row>\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst FormAdvanced = () => {\n    // set pagetitle\n    usePageTitle({\n        title: 'Advanced Form',\n        breadCrumbItems: [\n            {\n                path: '/forms/advanced',\n                label: 'Forms',\n            },\n            {\n                path: '/forms/advanced',\n                label: 'Advanced Form',\n                active: true,\n            },\n        ],\n    });\n\n    return (\n        <>\n            <Row>\n                <Col lg={6}>\n                    <ReactSelect />\n                </Col>\n                <Col lg={6}>\n                    <Typeaheads />\n                </Col>\n            </Row>\n\n            <Row>\n                <Col xs={12}>\n                    <DatePickers />\n                </Col>\n            </Row>\n\n            <Row>\n                <Col xs={12}>\n                    <InputMasks />\n                </Col>\n            </Row>\n        </>\n    );\n};\n\nexport default FormAdvanced;\n"],"names":["DatepickerInput","forwardRef","props","ref","_jsx","type","className","classNames","inputClass","onClick","value","onChange","onDateValueChange","console","log","DatepickerInputWithAddon","_jsxs","children","readOnly","input","hideAddon","_Fragment","DatePicker","calendarClassName","selectsRange","startDate","endDate","selected","date","customInput","timeIntervals","tI","showTimeSelect","timeFormat","timeCaption","dateFormat","minDate","maxDate","monthsShown","showTimeSelectOnly","inline","autoComplete","ReactSelect","Card","Body","Link","rel","to","target","Select","classNamePrefix","options","label","isMulti","Typeaheads","singleSelections","setSingleSelections","useState","multiSelections","setMultiSelections","id","href","Typeahead","labelKey","multiple","placeholder","DatePickers","selectedDate","setSelectedDate","Date","onDateChange","Row","Col","lg","AdmintoDatepicker","setDate","getDate","InputMasks","MaskedInput","mask","FormAdvanced","usePageTitle","title","breadCrumbItems","path","active","xs"],"sourceRoot":""}